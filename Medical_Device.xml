<channelGroup version="3.5.1">
  <id>f25853b7-66e1-40a2-bfad-f18f9d2c1850</id>
  <name>Medical Device</name>
  <revision>8</revision>
  <lastModified>
    <time>1524308974228</time>
    <timezone>Asia/Kuala_Lumpur</timezone>
  </lastModified>
  <description></description>
  <channels>
    <channel version="3.5.1">
      <id>7ed75c3d-67e0-43ef-a8a1-5f8fecc0ef46</id>
      <nextMetaDataId>2</nextMetaDataId>
      <name>Receive Status</name>
      <description></description>
      <revision>1</revision>
      <sourceConnector version="3.5.1">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.5.1">
          <pluginProperties/>
          <pollConnectorProperties version="3.5.1">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>5000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.5.1">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host></host>
          <fileFilter>*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>NONE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>0</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.5.1">
          <elements/>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.5.1">
          <elements/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.1">
          <metaDataId>1</metaDataId>
          <name>Destination 1</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.encodedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.1">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.1">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>false</enabled>
          <lastModified>
            <time>1512634447710</time>
            <timezone>Asia/Singapore</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
      </exportData>
    </channel>
    <channel version="3.5.1">
      <id>ecdd121c-ad52-41c6-8c68-bbbacc8642cb</id>
      <nextMetaDataId>7</nextMetaDataId>
      <name>DICOM Listener</name>
      <description></description>
      <revision>1</revision>
      <sourceConnector version="3.5.1">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.dimse.DICOMReceiverProperties" version="3.5.1">
          <pluginProperties/>
          <listenerConnectorProperties version="3.5.1">
            <host>0.0.0.0</host>
            <port>104</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.5.1">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <applicationEntity>AETITLE</applicationEntity>
          <localHost></localHost>
          <localPort></localPort>
          <localApplicationEntity></localApplicationEntity>
          <soCloseDelay>50</soCloseDelay>
          <releaseTo>5</releaseTo>
          <requestTo>5</requestTo>
          <idleTo>60</idleTo>
          <reaper>10</reaper>
          <rspDelay>0</rspDelay>
          <pdv1>false</pdv1>
          <sndpdulen>16</sndpdulen>
          <rcvpdulen>16</rcvpdulen>
          <async>0</async>
          <bigEndian>false</bigEndian>
          <bufSize>1</bufSize>
          <defts>false</defts>
          <dest></dest>
          <nativeData>false</nativeData>
          <sorcvbuf>0</sorcvbuf>
          <sosndbuf>0</sosndbuf>
          <tcpDelay>true</tcpDelay>
          <keyPW></keyPW>
          <keyStore></keyStore>
          <keyStorePW></keyStorePW>
          <noClientAuth>true</noClientAuth>
          <nossl2>true</nossl2>
          <tls>notls</tls>
          <trustStore></trustStore>
          <trustStorePW></trustStorePW>
        </properties>
        <transformer version="3.5.1">
          <elements>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080016_SOPClassUID</name>
              <sequenceNumber>0</sequenceNumber>
              <variable>_00080016_SOPClassUID</variable>
              <mapping>msg[&apos;tag00080016&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080018_SOPInstanceUID</name>
              <sequenceNumber>1</sequenceNumber>
              <variable>_00080018_SOPInstanceUID</variable>
              <mapping>msg[&apos;tag00080018&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080020_StudyDate</name>
              <sequenceNumber>2</sequenceNumber>
              <variable>_00080020_StudyDate</variable>
              <mapping>msg[&apos;tag00080020&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080021_SeriesDate</name>
              <sequenceNumber>3</sequenceNumber>
              <variable>_00080021_SeriesDate</variable>
              <mapping>msg[&apos;tag00080021&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080022_AcquisitionDate</name>
              <sequenceNumber>4</sequenceNumber>
              <variable>_00080022_AcquisitionDate</variable>
              <mapping>msg[&apos;tag00080022&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080023_ContentDate</name>
              <sequenceNumber>5</sequenceNumber>
              <variable>_00080023_ContentDate</variable>
              <mapping>msg[&apos;tag00080023&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_0008002A_AcquisitionDateTime</name>
              <sequenceNumber>6</sequenceNumber>
              <variable>_0008002A_AcquisitionDateTime</variable>
              <mapping>msg[&apos;tag0008002A&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080030_StudyTime</name>
              <sequenceNumber>7</sequenceNumber>
              <variable>_00080030_StudyTime</variable>
              <mapping>msg[&apos;tag00080030&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080031_SeriesTime</name>
              <sequenceNumber>8</sequenceNumber>
              <variable>_00080031_SeriesTime</variable>
              <mapping>msg[&apos;tag00080031&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080032_AcquisitionTime</name>
              <sequenceNumber>9</sequenceNumber>
              <variable>_00080032_AcquisitionTime</variable>
              <mapping>msg[&apos;tag00080032&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080033_ContentTime</name>
              <sequenceNumber>10</sequenceNumber>
              <variable>_00080033_ContentTime</variable>
              <mapping>msg[&apos;tag00080033&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080050_AccessionNumber</name>
              <sequenceNumber>11</sequenceNumber>
              <variable>_00080050_AccessionNumber</variable>
              <mapping>msg[&apos;tag00080050&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080060_Modality</name>
              <sequenceNumber>12</sequenceNumber>
              <variable>_00080060_Modality</variable>
              <mapping>msg[&apos;tag00080060&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080070_Manufacturer</name>
              <sequenceNumber>13</sequenceNumber>
              <variable>_00080070_Manufacturer</variable>
              <mapping>msg[&apos;tag00080070&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080080_InstitutionName</name>
              <sequenceNumber>14</sequenceNumber>
              <variable>_00080080_InstitutionName</variable>
              <mapping>msg[&apos;tag00080080&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00080090_ReferringPhysicianName</name>
              <sequenceNumber>15</sequenceNumber>
              <variable>_00080090_ReferringPhysicianName</variable>
              <mapping>msg[&apos;tag00080090&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00081010_StationName</name>
              <sequenceNumber>16</sequenceNumber>
              <variable>_00081010_StationName</variable>
              <mapping>msg[&apos;tag00081010&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00081040_InstitutionalDepartmentName</name>
              <sequenceNumber>17</sequenceNumber>
              <variable>_00081040_InstitutionalDepartmentName</variable>
              <mapping>msg[&apos;tag00081040&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00081090_ManufacturersModelName</name>
              <sequenceNumber>18</sequenceNumber>
              <variable>_00081090_ManufacturersModelName</variable>
              <mapping>msg[&apos;tag00081090&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00100010_PatientName</name>
              <sequenceNumber>19</sequenceNumber>
              <variable>_00100010_PatientName</variable>
              <mapping>msg[&apos;tag00100010&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00100020_PatientID</name>
              <sequenceNumber>20</sequenceNumber>
              <variable>_00100020_PatientID</variable>
              <mapping>msg[&apos;tag00100020&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00100030_PatientBirthDate</name>
              <sequenceNumber>21</sequenceNumber>
              <variable>_00100030_PatientBirthDate</variable>
              <mapping>msg[&apos;tag00100030&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00181000_DeviceSerialNumber</name>
              <sequenceNumber>22</sequenceNumber>
              <variable>_00181000_DeviceSerialNumber</variable>
              <mapping>msg[&apos;tag00181000&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00100040_PatientSex</name>
              <sequenceNumber>23</sequenceNumber>
              <variable>_00100040_PatientSex</variable>
              <mapping>msg[&apos;tag00100040&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00181020_SoftwareVersion</name>
              <sequenceNumber>24</sequenceNumber>
              <variable>_00181020_SoftwareVersion</variable>
              <mapping>msg[&apos;tag00181020&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_0020000D_StudyInstanceUID</name>
              <sequenceNumber>25</sequenceNumber>
              <variable>_0020000D_StudyInstanceUID</variable>
              <mapping>msg[&apos;tag0020000D&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_0020000E_SeriesInstanceUID</name>
              <sequenceNumber>26</sequenceNumber>
              <variable>_0020000E_SeriesInstanceUID</variable>
              <mapping>msg[&apos;tag0020000E&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00200010_StudyID</name>
              <sequenceNumber>27</sequenceNumber>
              <variable>_00200010_StudyID</variable>
              <mapping>msg[&apos;tag00200010&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00200011_SeriesNumber</name>
              <sequenceNumber>28</sequenceNumber>
              <variable>_00200011_SeriesNumber</variable>
              <mapping>msg[&apos;tag00200011&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00200013_InstanceNumber</name>
              <sequenceNumber>29</sequenceNumber>
              <variable>_00200013_InstanceNumber</variable>
              <mapping>msg[&apos;tag00200013&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00282110_LossyImageCompression</name>
              <sequenceNumber>30</sequenceNumber>
              <variable>_00282110_LossyImageCompression</variable>
              <mapping>msg[&apos;tag00282110&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00400244_PerfProcStepStartDate</name>
              <sequenceNumber>31</sequenceNumber>
              <variable>_00400244_PerfProcStepStartDate</variable>
              <mapping>msg[&apos;tag00400244&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>_00400245_PerfProcStepStartTime</name>
              <sequenceNumber>32</sequenceNumber>
              <variable>_00400245_PerfProcStepStartTime</variable>
              <mapping>msg[&apos;tag00400245&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
          </elements>
          <inboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+DQo8
ZGljb20+DQogICAgPHRhZzAwMDIwMDAwIGxlbj0iNCIgdGFnPSIwMDAyMDAwMCIgdnI9IlVMIj4x
OTA8L3RhZzAwMDIwMDAwPg0KICAgIDx0YWcwMDAyMDAwMSBsZW49IjIiIHRhZz0iMDAwMjAwMDEi
IHZyPSJPQiI+MDBcMDE8L3RhZzAwMDIwMDAxPg0KICAgIDx0YWcwMDAyMDAwMiBsZW49IjI4IiB0
YWc9IjAwMDIwMDAyIiB2cj0iVUkiPjEuMi44NDAuMTAwMDguNS4xLjQuMS4xLjYuMTwvdGFnMDAw
MjAwMDI+DQogICAgPHRhZzAwMDIwMDAzIGxlbj0iNjIiIHRhZz0iMDAwMjAwMDMiIHZyPSJVSSI+
MS4yLjQxMC4yMDAwMDEuMS4yMTcwMS4xMDQ4OTY1NDcxLjMuMjAxODAxMDguMTEwMTUxMTE1MS43
NTIuOTwvdGFnMDAwMjAwMDM+DQogICAgPHRhZzAwMDIwMDEwIGxlbj0iMTgiIHRhZz0iMDAwMjAw
MTAiIHZyPSJVSSI+MS4yLjg0MC4xMDAwOC4xLjI8L3RhZzAwMDIwMDEwPg0KICAgIDx0YWcwMDAy
MDAxMiBsZW49IjE2IiB0YWc9IjAwMDIwMDEyIiB2cj0iVUkiPjEuMi40MC4wLjEzLjEuMTwvdGFn
MDAwMjAwMTI+DQogICAgPHRhZzAwMDIwMDEzIGxlbj0iMTIiIHRhZz0iMDAwMjAwMTMiIHZyPSJT
SCI+ZGNtNGNoZS0yLjA8L3RhZzAwMDIwMDEzPg0KICAgIDx0YWcwMDA4MDAwOCBsZW49IjE2IiB0
YWc9IjAwMDgwMDA4IiB2cj0iQ1MiPk9SSUdJTkFMXFBSSU1BUlk8L3RhZzAwMDgwMDA4Pg0KICAg
IDx0YWcwMDA4MDAxNiBsZW49IjI4IiB0YWc9IjAwMDgwMDE2IiB2cj0iVUkiPjEuMi44NDAuMTAw
MDguNS4xLjQuMS4xLjYuMTwvdGFnMDAwODAwMTY+DQogICAgPHRhZzAwMDgwMDE4IGxlbj0iNjIi
IHRhZz0iMDAwODAwMTgiIHZyPSJVSSI+MS4yLjQxMC4yMDAwMDEuMS4yMTcwMS4xMDQ4OTY1NDcx
LjMuMjAxODAxMDguMTEwMTUxMTE1MS43NTIuOTwvdGFnMDAwODAwMTg+DQogICAgPHRhZzAwMDgw
MDIwIGxlbj0iOCIgdGFnPSIwMDA4MDAyMCIgdnI9IkRBIj4yMDE4MDEwODwvdGFnMDAwODAwMjA+
DQogICAgPHRhZzAwMDgwMDIxIGxlbj0iOCIgdGFnPSIwMDA4MDAyMSIgdnI9IkRBIj4yMDE4MDEw
ODwvdGFnMDAwODAwMjE+DQogICAgPHRhZzAwMDgwMDIyIGxlbj0iOCIgdGFnPSIwMDA4MDAyMiIg
dnI9IkRBIj4yMDE4MDEwODwvdGFnMDAwODAwMjI+DQogICAgPHRhZzAwMDgwMDIzIGxlbj0iOCIg
dGFnPSIwMDA4MDAyMyIgdnI9IkRBIj4yMDE4MDEwODwvdGFnMDAwODAwMjM+DQogICAgPHRhZzAw
MDgwMDJBIGxlbj0iMTQiIHRhZz0iMDAwODAwMkEiIHZyPSJEVCI+MjAxODAxMDgxMDE1MTE8L3Rh
ZzAwMDgwMDJBPg0KICAgIDx0YWcwMDA4MDAzMCBsZW49IjYiIHRhZz0iMDAwODAwMzAiIHZyPSJU
TSI+MDk1MjEyPC90YWcwMDA4MDAzMD4NCiAgICA8dGFnMDAwODAwMzEgbGVuPSI2IiB0YWc9IjAw
MDgwMDMxIiB2cj0iVE0iPjA5NTIxMjwvdGFnMDAwODAwMzE+DQogICAgPHRhZzAwMDgwMDMyIGxl
bj0iNiIgdGFnPSIwMDA4MDAzMiIgdnI9IlRNIj4xMDE1MTE8L3RhZzAwMDgwMDMyPg0KICAgIDx0
YWcwMDA4MDAzMyBsZW49IjYiIHRhZz0iMDAwODAwMzMiIHZyPSJUTSI+MTAxNTExPC90YWcwMDA4
MDAzMz4NCiAgICA8dGFnMDAwODAwNTAgbGVuPSIwIiB0YWc9IjAwMDgwMDUwIiB2cj0iU0giLz4N
CiAgICA8dGFnMDAwODAwNjAgbGVuPSIyIiB0YWc9IjAwMDgwMDYwIiB2cj0iQ1MiPlVTPC90YWcw
MDA4MDA2MD4NCiAgICA8dGFnMDAwODAwNzAgbGVuPSIyNiIgdGFnPSIwMDA4MDA3MCIgdnI9IkxP
Ij5TQU1TVU5HIE1FRElTT04gQ08uLCBMVEQuPC90YWcwMDA4MDA3MD4NCiAgICA8dGFnMDAwODAw
ODAgbGVuPSIxNCIgdGFnPSIwMDA4MDA4MCIgdnI9IkxPIj5VSVRNIFNHIEJVTE9IPC90YWcwMDA4
MDA4MD4NCiAgICA8dGFnMDAwODAwOTAgbGVuPSIwIiB0YWc9IjAwMDgwMDkwIiB2cj0iUE4iLz4N
CiAgICA8dGFnMDAwODEwMTAgbGVuPSI4IiB0YWc9IjAwMDgxMDEwIiB2cj0iU0giPlNhbXN1bmc8
L3RhZzAwMDgxMDEwPg0KICAgIDx0YWcwMDA4MTA0MCBsZW49IjIwIiB0YWc9IjAwMDgxMDQwIiB2
cj0iTE8iPlJBRElPTE9HWSBERVBBUlRNRU5UPC90YWcwMDA4MTA0MD4NCiAgICA8dGFnMDAwODEw
OTAgbGVuPSI2IiB0YWc9IjAwMDgxMDkwIiB2cj0iTE8iPkhTNzBBPC90YWcwMDA4MTA5MD4NCiAg
ICA8dGFnMDAwODExMTEgbGVuPSItMSIgdGFnPSIwMDA4MTExMSIgdnI9IlNRIj4NCiAgICAgICAg
PGl0ZW0gbGVuPSItMSIgb2ZmPSI3NTQiPg0KICAgICAgICAgICAgPHRhZzAwMDgxMTUwIGxlbj0i
MjQiIHRhZz0iMDAwODExNTAiIHZyPSJVSSI+MS4yLjg0MC4xMDAwOC4zLjEuMi4zLjM8L3RhZzAw
MDgxMTUwPg0KICAgICAgICAgICAgPHRhZzAwMDgxMTU1IGxlbj0iNjIiIHRhZz0iMDAwODExNTUi
IHZyPSJVSSI+MS4yLjQxMC4yMDAwMDEuMS4yMTcwMS4xMDQ4OTY1NDcxLjQuMjAxODAxMDguMTA5
NTIxMjY2NC44MzQuMTwvdGFnMDAwODExNTU+DQogICAgICAgIDwvaXRlbT4NCiAgICA8L3RhZzAw
MDgxMTExPg0KICAgIDx0YWcwMDEwMDAxMCBsZW49IjMwIiB0YWc9IjAwMTAwMDEwIiB2cj0iUE4i
PkRSIFNIQUhSSUwgSVJXQU4gQklOIFNVTEFJTUFOPC90YWcwMDEwMDAxMD4NCiAgICA8dGFnMDAx
MDAwMjAgbGVuPSIxMCIgdGFnPSIwMDEwMDAyMCIgdnI9IkxPIj4xODEwMTMzMTY1PC90YWcwMDEw
MDAyMD4NCiAgICA8dGFnMDAxMDAwMzAgbGVuPSI4IiB0YWc9IjAwMTAwMDMwIiB2cj0iREEiPjE5
NzkwODEzPC90YWcwMDEwMDAzMD4NCiAgICA8dGFnMDAxMDAwNDAgbGVuPSIyIiB0YWc9IjAwMTAw
MDQwIiB2cj0iQ1MiPk08L3RhZzAwMTAwMDQwPg0KICAgIDx0YWcwMDE4MTAwMCBsZW49IjE0IiB0
YWc9IjAwMTgxMDAwIiB2cj0iTE8iPkJSNzEwQUhHNjAwMDQzPC90YWcwMDE4MTAwMD4NCiAgICA8
dGFnMDAxODEwMjAgbGVuPSIxMiIgdGFnPSIwMDE4MTAyMCIgdnI9IkxPIj4yLjAwLjA0LjA0MTE8
L3RhZzAwMTgxMDIwPg0KICAgIDx0YWcwMDE4NjAxMSBsZW49Ii0xIiB0YWc9IjAwMTg2MDExIiB2
cj0iU1EiPg0KICAgICAgICA8aXRlbSBsZW49Ii0xIiBvZmY9IjEwMTIiPg0KICAgICAgICAgICAg
PHRhZzAwMTg2MDEyIGxlbj0iMiIgdGFnPSIwMDE4NjAxMiIgdnI9IlVTIj4xPC90YWcwMDE4NjAx
Mj4NCiAgICAgICAgICAgIDx0YWcwMDE4NjAxNCBsZW49IjIiIHRhZz0iMDAxODYwMTQiIHZyPSJV
UyI+MTwvdGFnMDAxODYwMTQ+DQogICAgICAgICAgICA8dGFnMDAxODYwMTYgbGVuPSI0IiB0YWc9
IjAwMTg2MDE2IiB2cj0iVUwiPjM8L3RhZzAwMTg2MDE2Pg0KICAgICAgICAgICAgPHRhZzAwMTg2
MDE4IGxlbj0iNCIgdGFnPSIwMDE4NjAxOCIgdnI9IlVMIj4wPC90YWcwMDE4NjAxOD4NCiAgICAg
ICAgICAgIDx0YWcwMDE4NjAxQSBsZW49IjQiIHRhZz0iMDAxODYwMUEiIHZyPSJVTCI+MTI5PC90
YWcwMDE4NjAxQT4NCiAgICAgICAgICAgIDx0YWcwMDE4NjAxQyBsZW49IjQiIHRhZz0iMDAxODYw
MUMiIHZyPSJVTCI+NjM5PC90YWcwMDE4NjAxQz4NCiAgICAgICAgICAgIDx0YWcwMDE4NjAxRSBs
ZW49IjQiIHRhZz0iMDAxODYwMUUiIHZyPSJVTCI+ODMyPC90YWcwMDE4NjAxRT4NCiAgICAgICAg
ICAgIDx0YWcwMDE4NjAyNCBsZW49IjIiIHRhZz0iMDAxODYwMjQiIHZyPSJVUyI+MzwvdGFnMDAx
ODYwMjQ+DQogICAgICAgICAgICA8dGFnMDAxODYwMjYgbGVuPSIyIiB0YWc9IjAwMTg2MDI2IiB2
cj0iVVMiPjM8L3RhZzAwMTg2MDI2Pg0KICAgICAgICAgICAgPHRhZzAwMTg2MDJDIGxlbj0iOCIg
dGFnPSIwMDE4NjAyQyIgdnI9IkZEIj4wLjAyNDk3NDY4ODg4NzU5NjEzPC90YWcwMDE4NjAyQz4N
CiAgICAgICAgICAgIDx0YWcwMDE4NjAyRSBsZW49IjgiIHRhZz0iMDAxODYwMkUiIHZyPSJGRCI+
MC4wMjQ5NzQ2ODg4ODc1OTYxMzwvdGFnMDAxODYwMkU+DQogICAgICAgIDwvaXRlbT4NCiAgICAg
ICAgPGl0ZW0gbGVuPSItMSIgb2ZmPSIxMTYwIj4NCiAgICAgICAgICAgIDx0YWcwMDE4NjAxMiBs
ZW49IjIiIHRhZz0iMDAxODYwMTIiIHZyPSJVUyI+MTwvdGFnMDAxODYwMTI+DQogICAgICAgICAg
ICA8dGFnMDAxODYwMTQgbGVuPSIyIiB0YWc9IjAwMTg2MDE0IiB2cj0iVVMiPjE8L3RhZzAwMTg2
MDE0Pg0KICAgICAgICAgICAgPHRhZzAwMTg2MDE2IGxlbj0iNCIgdGFnPSIwMDE4NjAxNiIgdnI9
IlVMIj4zPC90YWcwMDE4NjAxNj4NCiAgICAgICAgICAgIDx0YWcwMDE4NjAxOCBsZW49IjQiIHRh
Zz0iMDAxODYwMTgiIHZyPSJVTCI+NjQwPC90YWcwMDE4NjAxOD4NCiAgICAgICAgICAgIDx0YWcw
MDE4NjAxQSBsZW49IjQiIHRhZz0iMDAxODYwMUEiIHZyPSJVTCI+MTI5PC90YWcwMDE4NjAxQT4N
CiAgICAgICAgICAgIDx0YWcwMDE4NjAxQyBsZW49IjQiIHRhZz0iMDAxODYwMUMiIHZyPSJVTCI+
MTI3OTwvdGFnMDAxODYwMUM+DQogICAgICAgICAgICA8dGFnMDAxODYwMUUgbGVuPSI0IiB0YWc9
IjAwMTg2MDFFIiB2cj0iVUwiPjgzMjwvdGFnMDAxODYwMUU+DQogICAgICAgICAgICA8dGFnMDAx
ODYwMjQgbGVuPSIyIiB0YWc9IjAwMTg2MDI0IiB2cj0iVVMiPjM8L3RhZzAwMTg2MDI0Pg0KICAg
ICAgICAgICAgPHRhZzAwMTg2MDI2IGxlbj0iMiIgdGFnPSIwMDE4NjAyNiIgdnI9IlVTIj4zPC90
YWcwMDE4NjAyNj4NCiAgICAgICAgICAgIDx0YWcwMDE4NjAyQyBsZW49IjgiIHRhZz0iMDAxODYw
MkMiIHZyPSJGRCI+MC4wMjQ5NzQ2ODg4ODc1OTYxMzwvdGFnMDAxODYwMkM+DQogICAgICAgICAg
ICA8dGFnMDAxODYwMkUgbGVuPSI4IiB0YWc9IjAwMTg2MDJFIiB2cj0iRkQiPjAuMDI0OTc0Njg4
ODg3NTk2MTM8L3RhZzAwMTg2MDJFPg0KICAgICAgICA8L2l0ZW0+DQogICAgPC90YWcwMDE4NjAx
MT4NCiAgICA8dGFnMDAyMDAwMEQgbGVuPSI2MiIgdGFnPSIwMDIwMDAwRCIgdnI9IlVJIj4xLjIu
NDEwLjIwMDAwMS4xLjIxNzAxLjEwNDg5NjU0NzEuMS4yMDE4MDEwOC4xMDk1MjEyNjA2LjY5Mi4x
PC90YWcwMDIwMDAwRD4NCiAgICA8dGFnMDAyMDAwMEUgbGVuPSI2MiIgdGFnPSIwMDIwMDAwRSIg
dnI9IlVJIj4xLjIuNDEwLjIwMDAwMS4xLjIxNzAxLjEwNDg5NjU0NzEuMi4yMDE4MDEwOC4xMDk1
MjEyNjkwLjM5OC4xPC90YWcwMDIwMDAwRT4NCiAgICA8dGFnMDAyMDAwMTAgbGVuPSIxNCIgdGFn
PSIwMDIwMDAxMCIgdnI9IlNIIj4yMDE4MDEwODA5NTIxMjwvdGFnMDAyMDAwMTA+DQogICAgPHRh
ZzAwMjAwMDExIGxlbj0iMiIgdGFnPSIwMDIwMDAxMSIgdnI9IklTIj4xPC90YWcwMDIwMDAxMT4N
CiAgICA8dGFnMDAyMDAwMTMgbGVuPSIyIiB0YWc9IjAwMjAwMDEzIiB2cj0iSVMiPjk8L3RhZzAw
MjAwMDEzPg0KICAgIDx0YWcwMDIwMDAyMCBsZW49IjAiIHRhZz0iMDAyMDAwMjAiIHZyPSJDUyIv
Pg0KICAgIDx0YWcwMDI4MDAwMiBsZW49IjIiIHRhZz0iMDAyODAwMDIiIHZyPSJVUyI+MzwvdGFn
MDAyODAwMDI+DQogICAgPHRhZzAwMjgwMDA0IGxlbj0iNCIgdGFnPSIwMDI4MDAwNCIgdnI9IkNT
Ij5SR0I8L3RhZzAwMjgwMDA0Pg0KICAgIDx0YWcwMDI4MDAwNiBsZW49IjIiIHRhZz0iMDAyODAw
MDYiIHZyPSJVUyI+MDwvdGFnMDAyODAwMDY+DQogICAgPHRhZzAwMjgwMDEwIGxlbj0iMiIgdGFn
PSIwMDI4MDAxMCIgdnI9IlVTIj44NzI8L3RhZzAwMjgwMDEwPg0KICAgIDx0YWcwMDI4MDAxMSBs
ZW49IjIiIHRhZz0iMDAyODAwMTEiIHZyPSJVUyI+MTI4MDwvdGFnMDAyODAwMTE+DQogICAgPHRh
ZzAwMjgwMTAwIGxlbj0iMiIgdGFnPSIwMDI4MDEwMCIgdnI9IlVTIj44PC90YWcwMDI4MDEwMD4N
CiAgICA8dGFnMDAyODAxMDEgbGVuPSIyIiB0YWc9IjAwMjgwMTAxIiB2cj0iVVMiPjg8L3RhZzAw
MjgwMTAxPg0KICAgIDx0YWcwMDI4MDEwMiBsZW49IjIiIHRhZz0iMDAyODAxMDIiIHZyPSJVUyI+
NzwvdGFnMDAyODAxMDI+DQogICAgPHRhZzAwMjgwMTAzIGxlbj0iMiIgdGFnPSIwMDI4MDEwMyIg
dnI9IlVTIj4wPC90YWcwMDI4MDEwMz4NCiAgICA8dGFnMDAyODEwNTAgbGVuPSI0IiB0YWc9IjAw
MjgxMDUwIiB2cj0iRFMiPjEyODwvdGFnMDAyODEwNTA+DQogICAgPHRhZzAwMjgxMDUxIGxlbj0i
NCIgdGFnPSIwMDI4MTA1MSIgdnI9IkRTIj4yNTY8L3RhZzAwMjgxMDUxPg0KICAgIDx0YWcwMDI4
MjExMCBsZW49IjIiIHRhZz0iMDAyODIxMTAiIHZyPSJDUyI+MDA8L3RhZzAwMjgyMTEwPg0KICAg
IDx0YWcwMDQwMDI0NCBsZW49IjgiIHRhZz0iMDA0MDAyNDQiIHZyPSJEQSI+MjAxODAxMDg8L3Rh
ZzAwNDAwMjQ0Pg0KICAgIDx0YWcwMDQwMDI0NSBsZW49IjYiIHRhZz0iMDA0MDAyNDUiIHZyPSJU
TSI+MDk1MjEyPC90YWcwMDQwMDI0NT4NCiAgICA8dGFnMDA0MDAyNTMgbGVuPSIxNCIgdGFnPSIw
MDQwMDI1MyIgdnI9IlNIIj4yMDE4MDEwODA5NTIxMjwvdGFnMDA0MDAyNTM+DQo8L2RpY29tPg0K
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>DICOM</inboundDataType>
          <outboundDataType>DICOM</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
        </transformer>
        <filter version="3.5.1">
          <elements>
            <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
              <name>Accept message if &quot;msg[&apos;tag00100020&apos;][&apos;@tag&apos;].toString()&quot; exists</name>
              <sequenceNumber>0</sequenceNumber>
              <field>msg[&apos;tag00100020&apos;][&apos;@tag&apos;].toString()</field>
              <condition>EXISTS</condition>
              <values/>
            </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          </elements>
        </filter>
        <transportName>DICOM Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.1">
          <metaDataId>2</metaDataId>
          <name>Generate DICOM File N Setting Path</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <scheme>SFTP</scheme>
            <schemeProperties class="com.mirth.connect.connectors.file.SftpSchemeProperties">
              <passwordAuth>true</passwordAuth>
              <keyAuth>false</keyAuth>
              <keyFile></keyFile>
              <passPhrase></passPhrase>
              <hostKeyChecking>ask</hostKeyChecking>
              <knownHostsFile></knownHostsFile>
              <configurationSettings class="linked-hash-map"/>
            </schemeProperties>
            <host>172.19.64.7/var/integration/modal/${maps.get(&apos;_00080060_Modality&apos;)}/dcm</host>
            <outputPattern>${maps.get(&apos;_00080060_Modality&apos;)}_${maps.get(&apos;_00100020_PatientID&apos;)}_${date.get(&apos;yyyyMMddHHmmss&apos;)}.dcm</outputPattern>
            <anonymous>false</anonymous>
            <username>integration</username>
            <password>akar@1234</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>true</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${DICOMMESSAGE}</template>
          </properties>
          <transformer version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.mapper.MapperStep>
                <name>DicomFilePath</name>
                <sequenceNumber>0</sequenceNumber>
                <variable>DicomFilePath</variable>
                <mapping>&apos;/var/integration/modal/&apos;+$(&apos;_00080060_Modality&apos;)+&apos;/dcm&apos;</mapping>
                <defaultValue></defaultValue>
                <replacements/>
                <scope>CHANNEL</scope>
              </com.mirth.connect.plugins.mapper.MapperStep>
              <com.mirth.connect.plugins.mapper.MapperStep>
                <name>ImageFilePath</name>
                <sequenceNumber>1</sequenceNumber>
                <variable>ImageFilePath</variable>
                <mapping>&apos;/var/integration/modal/&apos;+$(&apos;_00080060_Modality&apos;)+&apos;/img&apos;</mapping>
                <defaultValue></defaultValue>
                <replacements/>
                <scope>CHANNEL</scope>
              </com.mirth.connect.plugins.mapper.MapperStep>
              <com.mirth.connect.plugins.mapper.MapperStep>
                <name>ImageFilename</name>
                <sequenceNumber>2</sequenceNumber>
                <variable>ImageFilename</variable>
                <mapping>$(&apos;_00080060_Modality&apos;) + &apos;_&apos; +$(&apos;_00100020_PatientID&apos;) + &apos;_&apos; + $(&apos;_0008002A_AcquisitionDateTime&apos;)</mapping>
                <defaultValue></defaultValue>
                <replacements/>
                <scope>CHANNEL</scope>
              </com.mirth.connect.plugins.mapper.MapperStep>
            </elements>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DICOM</inboundDataType>
            <outboundDataType>DICOM</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DICOM</inboundDataType>
            <outboundDataType>DICOM</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>1</metaDataId>
          <name>Generate Images N Write to DB</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>try{
	var d2 = responseMap.get(&apos;d2&apos;).toString();
	logger.info(d2);

	logger.info(&quot;response map &quot;+d2);
	
	var dcm_fname = d2.substring(51); // /home/hafizh/modality/US/dicom/US_09-12-2017-0019_20180214163530.dcm
	logger.info(&quot;DCMFILE:&quot;+dcm_fname);
	
	var img_fname = $(&apos;ImageFilename&apos;);
	logger.info(&quot;FILENAME:&quot;+img_fname);
	
	var img_path = $(&apos;ImageFilePath&apos;);
	
	var output = img_path +&apos;/&apos;+ img_fname;
	logger.info(&quot;JPGOUT:&quot;+output);

	
	/*
	*	Invoking dcmj2pnm command provided by dcmtk - Dicom Toolkit
	*   	Cmd : dcmj2pnm +Fa &lt;dcm-file&gt; +oj &lt;image-file&gt;
	*	Parameters : 
	*		+Fa       All frames will be extracted
	* 		+oj		JPEG format output
	*		
	*	Note: Image path is configurable at Generate DICOM File destination
	* 	See &quot;Image File path&quot; and &quot;Image Filename&quot; at Edit Transformer to alter
	*
	*/
	var exec = java.lang.Runtime.getRuntime().exec([&apos;dcmj2pnm&apos;, &apos;+Fa&apos;, dcm_fname,&apos;+oj&apos;, output])
	logger.info(&apos;Frames start extracting.&apos;);	
	exec.waitFor();
	logger.info(&apos;Extracting finished.&apos;)
}
catch(err){
	logger.error(err);	
}
								</script>
          </properties>
          <transformer version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>Extract Content</name>
                <sequenceNumber>0</sequenceNumber>
                <script>var json = 
{
&quot;dicom_data&quot; : {
		
  &quot;00080016&quot;: {
    &quot;vr&quot;: &quot;UI&quot;,
    &quot;Value&quot;: [
      $(&apos;_00080016_SOPClassUID&apos;)
    ]
  },
  &quot;00080018&quot;: {
    &quot;vr&quot;: &quot;UI&quot;,
    &quot;Value&quot;: [
      $(&apos;_00080018_SOPInstanceUID&apos;)
    ]
  },
  &quot;00080020&quot;: {
    &quot;vr&quot;: &quot;DA&quot;,
    &quot;Value&quot;: [
      $(&apos;_00080020_StudyDate&apos;)
    ]
  },
  &quot;00080021&quot;: {
    &quot;vr&quot;: &quot;DA&quot;,
    &quot;Value&quot;: [
      $(&apos;_00080021_SeriesDate&apos;)
    ]
  },
  &quot;00080022&quot;: {
    &quot;vr&quot;: &quot;DA&quot;,
    &quot;Value&quot;: [
      $(&apos;_00080022_AcquisitionDate&apos;)
    ]
  },
  &quot;00080023&quot;: {
    &quot;vr&quot;: &quot;DA&quot;,
    &quot;Value&quot;: [
      $(&apos;_00080023_ContentDate&apos;)
    ]
  },
  &quot;0008002A&quot;: {
    &quot;vr&quot;: &quot;DT&quot;,
    &quot;Value&quot;: [
      $(&apos;_0008002A_AcquisitionDateTime&apos;)
    ]
  },
  &quot;00080030&quot;: {
    &quot;vr&quot;: &quot;TM&quot;,
    &quot;Value&quot;: [
      $(&apos;_00080030_StudyTime&apos;)
    ]
  },
  &quot;00080031&quot;: {
    &quot;vr&quot;: &quot;TM&quot;,
    &quot;Value&quot;: [
      $(&apos;_00080031_SeriesTime&apos;)
    ]
  },
  &quot;00080032&quot;: {
    &quot;vr&quot;: &quot;TM&quot;,
    &quot;Value&quot;: [
      $(&apos;_00080032_AcquisitionTime&apos;)
    ]
  },
  &quot;00080033&quot;: {
    &quot;vr&quot;: &quot;TM&quot;,
    &quot;Value&quot;: [
      $(&apos;_00080033_ContentTime&apos;)
    ]
  },
  &quot;00080050&quot;: {
    &quot;vr&quot;: &quot;SH&quot;,
    &quot;Value&quot;: [
      $(&apos;_00080050_AccessionNumber&apos;)
    ]
  },
  &quot;00080060&quot;: {
    &quot;vr&quot;: &quot;CS&quot;,
    &quot;Value&quot;: [
      $(&apos;_00080060_Modality&apos;)
    ]
  },
  &quot;00080070&quot;: {
    &quot;vr&quot;: &quot;LO&quot;,
    &quot;Value&quot;: [
      $(&apos;_00080070_Manufacturer&apos;)
    ]
  },
  &quot;00080080&quot;: {
    &quot;vr&quot;: &quot;LO&quot;,
    &quot;Value&quot;: [
      $(&apos;_00080080_InstitutionName&apos;)
    ]
  },
  &quot;00080090&quot;: {
    &quot;vr&quot;: &quot;PN&quot;,
    &quot;Value&quot; : [
    	  $(&apos;_00080090_ReferringPhysicianName&apos;)
  	]
  },
  &quot;00081010&quot;: {
    &quot;vr&quot;: &quot;SH&quot;,
    &quot;Value&quot;: [
      $(&apos;_00081010_StationName&apos;)
     ]
  },
  &quot;00081040&quot;: {
    &quot;vr&quot;: &quot;LO&quot;,
    &quot;Value&quot;: [
      $(&apos;_00081040_InstitutionalDepartmentName&apos;)
    ]
  },
  &quot;00081090&quot;: {
    &quot;vr&quot;: &quot;LO&quot;,
    &quot;Value&quot;: [
      $(&apos;_00081090_ManufacturersModelName&apos;)
    ]
  },
  &quot;00100010&quot;: {
    &quot;vr&quot;: &quot;PN&quot;,
    &quot;Value&quot;: [
      {
        &quot;Alphabetic&quot;: $(&apos;_00100010_PatientName&apos;)
      }
    ]
  },
  &quot;00100020&quot;: {
    &quot;vr&quot;: &quot;LO&quot;,
    &quot;Value&quot;: [
      $(&apos;_00100020_PatientID&apos;)
    ]
  },
  &quot;00100030&quot;: {
    &quot;vr&quot;: &quot;DA&quot;,
    &quot;Value&quot;: [
      $(&apos;_00100030_PatientBirthDate&apos;)
    ]
  },
  &quot;00100040&quot;: {
    &quot;vr&quot;: &quot;CS&quot;,
    &quot;Value&quot;: [
      $(&apos;_00100040_PatientSex&apos;)
    ]
  },
  &quot;00181000&quot;: {
    &quot;vr&quot;: &quot;LO&quot;,
    &quot;Value&quot;: [
      $(&apos;_00181000_DeviceSerialNumber&apos;)
    ]
  },
  &quot;00181020&quot;: {
    &quot;vr&quot;: &quot;LO&quot;,
    &quot;Value&quot;: [
      $(&apos;_00181020_SoftwareVersion&apos;)
    ]
  },
  &quot;0020000D&quot;: {
    &quot;vr&quot;: &quot;UI&quot;,
    &quot;Value&quot;: [
      $(&apos;_0020000D_StudyInstanceUID&apos;)
    ]
  },
  &quot;0020000E&quot;: {
    &quot;vr&quot;: &quot;UI&quot;,
    &quot;Value&quot;: [
      $(&apos;_0020000E_SeriesInstanceUID&apos;)
    ]
  },
  &quot;00200010&quot;: {
    &quot;vr&quot;: &quot;SH&quot;,
    &quot;Value&quot;: [
      $(&apos;_00200010_StudyID&apos;)
    ]
  },
  &quot;00200011&quot;: {
    &quot;vr&quot;: &quot;IS&quot;,
    &quot;Value&quot;: [
      $(&apos;_00200011_SeriesNumber&apos;)
    ]
  },
  &quot;00200013&quot;: {
    &quot;vr&quot;: &quot;IS&quot;,
    &quot;Value&quot;: [
      $(&apos;_00200013_InstanceNumber&apos;)
    ]
  },
  &quot;00282110&quot;: {
    &quot;vr&quot;: &quot;CS&quot;,
    &quot;Value&quot;: [
      $(&apos;_00282110_LossyImageCompression&apos;)
    ]
  },
  &quot;00400244&quot;: {
    &quot;vr&quot;: &quot;DA&quot;,
    &quot;Value&quot;: [
      $(&apos;_00400244_PerfProcStepStartDate&apos;)
    ]
  },
  &quot;00400245&quot;: {
    &quot;vr&quot;: &quot;TM&quot;,
    &quot;Value&quot;: [
      $(&apos;_00400245_PerfProcStepStartTime&apos;)
    ]
  },
  &quot;Uri&quot;:{
  	&quot;Value&quot;: [
  		&apos;/modality/&apos;+$(&apos;_00080060_Modality&apos;) +&apos;/dicom/&apos;
  	]
  }
},
&quot;his_data&quot; : {
	&quot;images&quot;:[
      &apos;/modality/&apos; + $(&apos;_00080060_Modality&apos;) + &apos;/images/&apos; + $(&apos;_00080060_Modality&apos;) + &apos;_&apos; + $(&apos;_00100020_PatientID&apos;) + &apos;.0.jpg&apos;
      ],
      &quot;patient_info&quot; : {
        &quot;name&quot; : $(&apos;_00100010_PatientName&apos;),
        &quot;patient_mrn&quot; : $(&apos;_00100020_PatientID&apos;),
        &quot;gender&quot;: $(&apos;_00100040_PatientSex&apos;)
      }
      }

}

channelMap.put(&apos;content&apos;, JSON.stringify(json));</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DICOM</inboundDataType>
            <outboundDataType>DICOM</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>DICOM</inboundDataType>
            <outboundDataType>DICOM</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>//Getting content from ChannelMap 
var img_path=&apos;&apos;
var img_fname=&apos;&apos;
var pat_id=&apos;&apos;
var ok=false
var imgJson = {}

if(channelMap.get(&apos;ImageFilePath&apos;) != null)
	img_path = channelMap.get(&apos;ImageFilePath&apos;).toString();
if(channelMap.get(&apos;ImageFilename&apos;) != null)
	img_fname = channelMap.get(&apos;ImageFilename&apos;).toString();
if(channelMap.get(&apos;_00100020_PatientID&apos;) != null)
	pat_id = channelMap.get(&apos;_00100020_PatientID&apos;).toString();	

//Checking validity of content variable
if(img_path != &apos;&apos; &amp;&amp;
   img_fname != &apos;&apos; &amp;&amp;
   pat_id != &apos;&apos;){
   	ok = true;
   }

if(ok == true){
	//Execute external script for generating image path
	var cmd = &apos;./mirthdm.sh&apos;+&apos; &apos;+
			img_fname+&apos; &apos;+
			img_path;
	logger.info(&quot;genLog:&quot;+cmd);
	var genLog = java.lang.Runtime.getRuntime().exec(cmd);
	genLog.waitFor(); //wait until finished

	cmd = &apos;cat&apos;+&apos; &apos;+
		 img_path+
		 &apos;/tmp.log&apos;;
	logger.info(&quot;redLog:&quot;+cmd)
	var readLog = java.lang.Runtime.getRuntime().exec(cmd);
	readLog.waitFor();

	var readLogIS = readLog.getInputStream();
	var readLogData = org.apache.commons.io.IOUtils.toString(readLogIS);

	//Reformating to JSON style
	var data = {&quot;images&quot;: []};
	var pathList = readLogData.split(&apos; &apos;);

	var arr = [];
	var trimed
	for(var i=0;i&lt;pathList.length;i++){
		trimed=pathList[i].replace(&apos;\n&apos;,&apos;&apos;);
		arr.push(trimed);
	}

	data[&quot;images&quot;]=arr;
	imgJson = JSON.stringify(data);
}
   
//Getting content variables from ChannelMap
var dev_id=&apos;&apos;
var modality=&apos;&apos;
var content=&apos;&apos;
ok = false;

if(channelMap.get(&apos;_00181000_DeviceSerialNumber&apos;) != null) 
	dev_id=channelMap.get(&apos;_00181000_DeviceSerialNumber&apos;).toString();
if(channelMap.get(&apos;_00080060_Modality&apos;) != null) 
	modality=channelMap.get(&apos;_00080060_Modality&apos;).toString();
if(channelMap.get(&apos;content&apos;) != null) 
	content=channelMap.get(&apos;content&apos;).toString();

//Checking validity of content
if(pat_id != &apos;&apos; &amp;&amp; 
   dev_id != &apos;&apos; &amp;&amp;
   modality != &apos;&apos; &amp;&amp;
   content != &apos;&apos;){
   	ok = true
   }
logger.info(&quot;writedb:&quot;+ok)
if(ok == true){
	try{
		var dbConn
		dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,
			&apos;jdbc:mysql://172.19.64.7:3306/integdb&apos;,&apos;root&apos;,&apos;Root@!23&apos;);
		result = dbConn.executeUpdate(&apos;INSERT INTO dicom (patient_id,device_id,modality,content,images,status)&apos;+
								&apos;VALUES (?,?,?,?,?,?)&apos;,[
			pat_id, 
			dev_id,
			modality, 
			content,
			imgJson,
			1])	
	}
	finally {
		if (dbConn) { 
			dbConn.close();
		}	
	} 
}

								

return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.1">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>true</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.1">
          <className>com.mirth.connect.server.attachments.dicom.DICOMAttachmentHandlerProvider</className>
          <type>DICOM</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>false</enabled>
          <lastModified>
            <time>1524162123273</time>
            <timezone>Asia/Kuala_Lumpur</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
      </exportData>
    </channel>
    <channel version="3.5.1">
      <id>9891ef2e-6e40-4842-9c8b-bf9c37d8e029</id>
      <nextMetaDataId>2</nextMetaDataId>
      <name>Retrieve data</name>
      <description></description>
      <revision>1</revision>
      <sourceConnector version="3.5.1">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.5.1">
          <pluginProperties>
            <com.mirth.connect.plugins.httpauth.basic.BasicHttpAuthProperties version="3.5.1">
  <authType>BASIC</authType>
              <realm>My Realm</realm>
              <credentials class="linked-hash-map">
    <entry>
      <string>admin</string>
                  <string>admin</string>
                </entry>
              </credentials>
            </com.mirth.connect.plugins.httpauth.basic.BasicHttpAuthProperties>
          </pluginProperties>
          <listenerConnectorProperties version="3.5.1">
            <host>0.0.0.0</host>
            <port>8090</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.5.1">
            <responseVariable>d1</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <xmlBody>true</xmlBody>
          <parseMultipart>true</parseMultipart>
          <includeMetadata>false</includeMetadata>
          <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
          <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
          <responseContentType>application/json</responseContentType>
          <responseDataTypeBinary>false</responseDataTypeBinary>
          <responseStatusCode>${responseStatusCode}</responseStatusCode>
          <responseHeaders class="linked-hash-map">
            <entry>
              <string>Content-Type</string>
              <list>
                <string>${responseContentType}</string>
              </list>
            </entry>
            <entry>
              <string>Access-Control-Allow-Origin</string>
              <list>
                <string>http://localhost</string>
              </list>
            </entry>
            <entry>
              <string>Access-Control-Allow-Methods</string>
              <list>
                <string>GET,PUT,POST,DELETE</string>
              </list>
            </entry>
            <entry>
              <string>Access-Control-Allow-Credentials</string>
              <list>
                <string>true</string>
              </list>
            </entry>
            <entry>
              <string>Access-Control-Allow-Headers</string>
              <list>
                <string>X-CustomHeader,Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With</string>
              </list>
            </entry>
            <entry>
              <string>Access-Control-Expose-Headers</string>
              <list>
                <string>Authorization</string>
              </list>
            </entry>
          </responseHeaders>
          <charset>UTF-8</charset>
          <contextPath>integration</contextPath>
          <timeout>0</timeout>
          <staticResources/>
        </properties>
        <transformer version="3.5.1">
          <elements/>
          <inboundDataType>XML</inboundDataType>
          <outboundDataType>XML</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
              <stripNamespaces>true</stripNamespaces>
            </serializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
              <splitType>Element_Name</splitType>
              <elementName></elementName>
              <level>1</level>
              <query></query>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
              <stripNamespaces>true</stripNamespaces>
            </serializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
              <splitType>Element_Name</splitType>
              <elementName></elementName>
              <level>1</level>
              <query></query>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.5.1">
          <elements/>
        </filter>
        <transportName>HTTP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.1">
          <metaDataId>1</metaDataId>
          <name>HTTP Response</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://172.19.64.7:3306/integdb</url>
            <username>root</username>
            <password>Root@!23</password>
            <query>var dbConn;
var result;
var paramList;
var content = {};
var table;
var column;
var pat_id;
var json = {};
var minimumURLParameterCount = 3;
var responseContentType;

/* Preparing input parameters */
var contextPath = $(&apos;contextPath&apos;);
logger.info(contextPath);
var prefixService = &quot;/integration&quot;;
var params = contextPath.substring(prefixService.length).split(&apos;/&apos;); 

try {
	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://172.19.64.7:3306/integdb&apos;,&apos;root&apos;,&apos;Root@!23&apos;);
	if(params.length &lt; minimumURLParameterCount)
 		return Packages.com.mirth.connect.server.userutil.ResponseFactory.getErrorResponse(&apos;Too few parameters in request&apos;);
	
	// Just in case we fail, set a sane responseContentType
	responseContentType = &apos;application/json&apos;;
	channelMap.put(&apos;responseContentType&apos;, &apos;application/json&apos;);

	table = params[1];
	column = params[2];
	pat_id = params[3];
	paramList = [pat_id];
	result = dbConn.executeCachedQuery(&apos;select content, images from dicom where patient_id=? order by id desc limit 1&apos;, paramList);
	
	result.next();
	json.data = &apos;{&quot;content&quot;:&apos;+result.getString(1)+&apos;,&quot;images&quot;:&apos;+result.getString(2)+&apos;}&apos;;
	
	result.close();
	
	channelMap.put(&apos;responseStatusCode&apos;, &apos;200&apos;);
	json.status = &apos;success&apos;;&#xd;	channelMap.put(&apos;responseContent&apos;, content);
     channelMap.put(&apos;responseContentType&apos;, responseContentType);
     return json.data;
}
catch (err)
{
  	channelMap.put(&apos;responseStatusCode&apos;, &apos;500&apos;);
	json.status = &apos;error&apos;;
	if(err.javaException) {
	 // If you want to unpack a Java exception, this is how you do it:
	 	json.errorType = String(err.javaException.getClass().getName());
	 	json.errorMessage = String(err.javaException.getMessage());
	}

    	channelMap.put(&apos;responseContentType&apos;, responseContentType);
 
    	// Return an error with our &quot;error&quot; JSON
    	return Packages.com.mirth.connect.server.userutil.ResponseFactory.getErrorResponse(JSON.stringify(json));

} finally {
	if (dbConn) { 
		dbConn.close();
	}
}

</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>XML</inboundDataType>
            <outboundDataType>XML</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
                <stripNamespaces>true</stripNamespaces>
              </serializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
                <splitType>Element_Name</splitType>
                <elementName></elementName>
                <level>1</level>
                <query></query>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
                <stripNamespaces>true</stripNamespaces>
              </serializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
                <splitType>Element_Name</splitType>
                <elementName></elementName>
                <level>1</level>
                <query></query>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>XML</inboundDataType>
            <outboundDataType>XML</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
                <stripNamespaces>true</stripNamespaces>
              </serializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
                <splitType>Element_Name</splitType>
                <elementName></elementName>
                <level>1</level>
                <query></query>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
                <stripNamespaces>true</stripNamespaces>
              </serializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
                <splitType>Element_Name</splitType>
                <elementName></elementName>
                <level>1</level>
                <query></query>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.1">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.1">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>true</enabled>
          <lastModified>
            <time>1519378664671</time>
            <timezone>Asia/Kuala_Lumpur</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
      </exportData>
    </channel>
    <channel version="3.5.1">
      <id>5588c920-a458-4fcf-9cfc-861607320bb7</id>
      <nextMetaDataId>2</nextMetaDataId>
      <name>DICOM Worklist</name>
      <description></description>
      <revision>1</revision>
      <sourceConnector version="3.5.1">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.jdbc.DatabaseReceiverProperties" version="3.5.1">
          <pluginProperties/>
          <pollConnectorProperties version="3.5.1">
            <pollingType>CRON</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>5000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs>
              <cronProperty>
                <description>Run every 5 seconds.</description>
                <expression>*/5 * * * * ?</expression>
              </cronProperty>
            </cronJobs>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.5.1">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <driver>com.mysql.jdbc.Driver</driver>
          <url>jdbc:mysql://172.19.64.7:3306/integdb</url>
          <username>root</username>
          <password>Root@!23</password>
          <select>SELECT orders.timestamp AS orders_timestamp, orders.patient_mrn AS orders_patient_mrn, orders.patient_name AS orders_patient_name, orders.modality AS orders_modality, orders.status AS orders_status, orders.his_order_id AS orders_his_order_id, orders.decipline AS orders_decipline, orders.ordered_by AS orders_ordered_by
FROM orders WHERE status=2

</select>
          <update></update>
          <useScript>false</useScript>
          <aggregateResults>false</aggregateResults>
          <cacheResults>true</cacheResults>
          <keepConnectionOpen>true</keepConnectionOpen>
          <updateMode>1</updateMode>
          <retryCount>3</retryCount>
          <retryInterval>10000</retryInterval>
          <fetchSize>1000</fetchSize>
          <encoding>DEFAULT_ENCODING</encoding>
        </properties>
        <transformer version="3.5.1">
          <elements>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>patienMRN</name>
              <sequenceNumber>0</sequenceNumber>
              <variable>patienMRN</variable>
              <mapping>msg[&apos;orders_patient_mrn&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>patientName</name>
              <sequenceNumber>1</sequenceNumber>
              <variable>patientName</variable>
              <mapping>msg[&apos;orders_patient_name&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>modality</name>
              <sequenceNumber>2</sequenceNumber>
              <variable>modality</variable>
              <mapping>msg[&apos;orders_modality&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>accessionNo</name>
              <sequenceNumber>3</sequenceNumber>
              <variable>accessionNo</variable>
              <mapping>msg[&apos;orders_his_order_id&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>physicianPersonel</name>
              <sequenceNumber>4</sequenceNumber>
              <variable>physicianPersonel</variable>
              <mapping>msg[&apos;orders_ordered_by&apos;].toString()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
          </elements>
          <inboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+DQo8
cmVzdWx0Pg0KICAgIDxvcmRlcnNfdGltZXN0YW1wPnZhbHVlPC9vcmRlcnNfdGltZXN0YW1wPg0K
ICAgIDxvcmRlcnNfcGF0aWVudF9tcm4+dmFsdWU8L29yZGVyc19wYXRpZW50X21ybj4NCiAgICA8
b3JkZXJzX3BhdGllbnRfbmFtZT52YWx1ZTwvb3JkZXJzX3BhdGllbnRfbmFtZT4NCiAgICA8b3Jk
ZXJzX21vZGFsaXR5PnZhbHVlPC9vcmRlcnNfbW9kYWxpdHk+DQogICAgPG9yZGVyc19zdGF0dXM+
dmFsdWU8L29yZGVyc19zdGF0dXM+DQogICAgPG9yZGVyc19oaXNfb3JkZXJfaWQ+dmFsdWU8L29y
ZGVyc19oaXNfb3JkZXJfaWQ+DQogICAgPG9yZGVyc19kZWNpcGxpbmU+dmFsdWU8L29yZGVyc19k
ZWNpcGxpbmU+DQogICAgPG9yZGVyc19vcmRlcmVkX2J5PnZhbHVlPC9vcmRlcnNfb3JkZXJlZF9i
eT4NCjwvcmVzdWx0Pg0K</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>XML</inboundDataType>
          <outboundDataType>DICOM</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
              <stripNamespaces>true</stripNamespaces>
            </serializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
              <splitType>Element_Name</splitType>
              <elementName></elementName>
              <level>1</level>
              <query></query>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
        </transformer>
        <filter version="3.5.1">
          <elements/>
        </filter>
        <transportName>Database Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.1">
          <metaDataId>1</metaDataId>
          <name>OFFIS</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>/home/hafizh/worklist</host>
            <outputPattern>wklist.wl</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DICOM</inboundDataType>
            <outboundDataType>DICOM</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>DICOM</inboundDataType>
            <outboundDataType>DICOM</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.dicom.DICOMDataTypeProperties" version="3.5.1"/>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.1">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.1">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>false</enabled>
          <lastModified>
            <time>1519959324128</time>
            <timezone>Asia/Singapore</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
      </exportData>
    </channel>
    <channel version="3.5.1">
      <id>4d2ecd5b-f1cd-4fb6-a80a-fc01bdd70b4e</id>
      <nextMetaDataId>20</nextMetaDataId>
      <name>HIS Device RESTful</name>
      <description></description>
      <revision>195</revision>
      <sourceConnector version="3.5.1">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.5.1">
          <pluginProperties>
            <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="3.5.1">
  <authType>NONE</authType>
            </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
          </pluginProperties>
          <listenerConnectorProperties version="3.5.1">
            <host>0.0.0.0</host>
            <port>8081</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.5.1">
            <responseVariable>Postprocessor</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <xmlBody>false</xmlBody>
          <parseMultipart>true</parseMultipart>
          <includeMetadata>false</includeMetadata>
          <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
          <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
          <responseContentType>application/json</responseContentType>
          <responseDataTypeBinary>false</responseDataTypeBinary>
          <responseStatusCode></responseStatusCode>
          <responseHeaders class="linked-hash-map">
            <entry>
              <string>Content-Type</string>
              <list>
                <string>application/json</string>
              </list>
            </entry>
            <entry>
              <string>Access-Control-Allow-Origin</string>
              <list>
                <string>*</string>
              </list>
            </entry>
            <entry>
              <string>Access-Control-Allow-Methods</string>
              <list>
                <string>*</string>
              </list>
            </entry>
            <entry>
              <string>Access-Control-Allow-Headers</string>
              <list>
                <string>*</string>
              </list>
            </entry>
          </responseHeaders>
          <charset>UTF-8</charset>
          <contextPath>integration</contextPath>
          <timeout>0</timeout>
          <staticResources/>
        </properties>
        <transformer version="3.5.1">
          <elements>
            <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
              <name>GlobalFunctions</name>
              <sequenceNumber>0</sequenceNumber>
              <script>function executeQuery(query,queryParameters){
	var gateway_database = globalChannelMap.get(&apos;gateway_database&apos;);
	var user = globalChannelMap.get(&apos;gateway_database_user&apos;);
	var pass = globalChannelMap.get(&apos;gateway_database_pass&apos;);
	var dbConn;
	try {
		dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://&apos;+gateway_database,user,pass);
		var result = dbConn.executeCachedQuery(query,queryParameters);
		return result;
	} finally {
		if (dbConn) { 
			dbConn.close();
		}
	}
}

function executeInsertQuery(query,queryParameters){
	var gateway_database = globalChannelMap.get(&apos;gateway_database&apos;);
	var user = globalChannelMap.get(&apos;gateway_database_user&apos;);
	var pass = globalChannelMap.get(&apos;gateway_database_pass&apos;);
	var dbConn;
	try {
		dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://&apos;+gateway_database,user,pass);
		var result = dbConn.executeUpdate(query,queryParameters);
		return result;
	} finally {
		if (dbConn) { 
			dbConn.close();
		}
	}
}

function finalResponse(jsonString){
	channelMap.put(&apos;responseContent&apos;, jsonString);
	channelMap.put(&apos;responseContentType&apos;, &apos;application/fhir+json&apos;);
}

function parameterTest(bool){
	if(bool!==null){
		return true;
	} else {
		return false;
	}
}

globalMap.put(&apos;functExecuteQuery&apos;, validate(executeQuery, &apos;&apos;, new Array()));
globalMap.put(&apos;functExecuteInsertQuery&apos;, validate(executeInsertQuery, &apos;&apos;, new Array()));
globalMap.put(&apos;functFinalResponse&apos;, validate(finalResponse, &apos;&apos;, new Array()));
globalMap.put(&apos;functParameterTest&apos;,  validate(parameterTest, &apos;&apos;, new Array()));</script>
            </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
              <name>RouteController</name>
              <sequenceNumber>1</sequenceNumber>
              <script>var contextPath = sourceMap.get(&apos;contextPath&apos;).toString();
var prefixService = &quot;/integration&quot;;
var params = contextPath.substring(prefixService.length).split(&apos;/&apos;);

var route = String(params[1]);
var routePath = String(params[2]);

switch(route){
	case &apos;orders&apos;:
		switch(routePath){
			case &apos;updateorder&apos;:
				destinationSet.removeAllExcept([10,15]);
			break;
			case &apos;complete-order&apos;:
				destinationSet.removeAllExcept([11,15]);
			break;
			case &apos;discontinued-order&apos;:
				destinationSet.removeAllExcept([12,15]);
			break;
			case &apos;neworder&apos;:
				destinationSet.removeAllExcept([1,15]);
			break;
			case &apos;orderlist&apos;:
				destinationSet.removeAllExcept([15,3]);
			break;
			case &apos;ultrasound&apos;:
				destinationSet.removeAllExcept([6,15]);
			break;
			case &apos;completeorder&apos;:
				destinationSet.removeAllExcept([14,15,16]);
			break;
			case &apos;order-media&apos;:
				destinationSet.removeAllExcept(17);
			break;
			case &apos;order-summary&apos;:
				destinationSet.removeAllExcept(19);
			break;
		}
	break;
	default:
	break;
}</script>
            </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          </elements>
          <inboundTemplate encoding="base64">ewoJInBhdGllbnRfbXJuIiA6ICI4NzEyMzEyMyIsCgkicGF0aWVudF9uYW1lIiA6ICJIYWZpeiBI
YW1kaSIsCgkiaGlzX29yZGVyX2lkIiA6ICIxMjMxMjEiLAoJImhpc19kaWNpcGxpbmUiIDogIk9O
RyIsCgkib3JkZXJlZF9ieSIgOiAiQWxpIEFidSIsCgkibW9kYWxpdHkiIDogIlVTIgp9</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>RAW</inboundDataType>
          <outboundDataType>RAW</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
            <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
            <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.5.1">
          <elements/>
        </filter>
        <transportName>HTTP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.1">
          <metaDataId>15</metaDataId>
          <name>PUT Order Status Fundus &amp; Spiro</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>var query = &quot;SELECT his_order_id FROM orders WHERE device_code IN (&apos;SPM001&apos;,&apos;FCM001&apos;) AND order_status = &apos;NEW&apos;&quot;;
var queryParameters = [];
var his_order_ids = $(&apos;functExecuteQuery&apos;)(query,queryParameters);
var ids = &apos;&apos;;
var countResult = his_order_ids.size();

if(countResult&gt;0){
	var count = 1;
	while (his_order_ids.next()){
			ids += his_order_ids.getString(1);
			if(count&lt;countResult){
				ids += &apos;, &apos;;
			}
			count++;
			};
	
	var queryOrders = &quot;UPDATE orders SET order_status = &apos;IN PROGRESS&apos; WHERE device_code IN (&apos;SPM001&apos;,&apos;FCM001&apos;) AND order_status = &apos;NEW&apos;&quot;;
	var queryParametersOrders = [];
	$(&apos;functExecuteInsertQuery&apos;)(queryOrders,queryParametersOrders);
	
	var queryOrdersCoe = &quot;UPDATE his_patient_coe SET status = &apos;IN PROGRESS&apos; WHERE his_order_id IN (&quot;+ids+&quot;) AND status = &apos;SUBMITTED&apos;&quot;;
	var queryParametersOrdersCoe = [];
	$(&apos;functExecuteInsertQuery&apos;)(queryOrdersCoe,queryParametersOrdersCoe);
}
</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>false</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>1</metaDataId>
          <name>POST New Order</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;POST&apos;){
	if(connectorMessage.getRawData() != &apos;&apos;){
		var msg = JSON.parse(connectorMessage.getRawData());
		var patient_id = validate(msg.patient.patient_id, &apos;&apos;, new Array());
		var patient_gender = msg.patient.patient_gender;
		var patient_dob = msg.patient.patient_date_of_birth;
		var patient_name = msg.patient.patient_name;
		var patient_ic = msg.patient.patient_ic;

		var his_order_id = msg.order_data.his_order_id;
		var device_code = msg.order_data.his_device_code; 
		var his_order_disicpline = msg.order_data.his_order_dicipline;
		var his_appointment_date = msg.order_data.his_appointment_date;
		var his_ordered_by = msg.order_data.his_ordered_by;
		var order_status = &apos;NEW&apos;;
		
		var query = &quot;INSERT INTO orders (patient_id, patient_name, patient_gender, patient_dob, his_order_id, device_code, his_order_discipline, his_appointment_date, his_ordered_by,order_status) VALUE (?,?,?,?,?,?,?,?,?,?)&quot;
		var queryParameters = [patient_id, patient_name, patient_gender, patient_dob, his_order_id, device_code, his_order_disicpline, his_appointment_date,his_ordered_by, order_status];
		$(&apos;functExecuteInsertQuery&apos;)(query,queryParameters);

		var routePath = &apos;endo/new-order&apos;;
		msg[&apos;routePath&apos;] = routePath;
		var newMessage = msg;
				
		if(device_code==&apos;EDP001&apos;){
			router.routeMessage(&apos;Internal Device RESTful&apos;, JSON.stringify(newMessage));	
		}
		

	}
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.mapper.MapperStep>
                <name>patient_id</name>
                <sequenceNumber>0</sequenceNumber>
                <variable>patient_id</variable>
                <mapping>tmp[&apos;patient_id&apos;]</mapping>
                <defaultValue></defaultValue>
                <replacements/>
                <scope>CHANNEL</scope>
              </com.mirth.connect.plugins.mapper.MapperStep>
            </elements>
            <inboundTemplate encoding="base64">ewoicGF0aWVudF9pZCI6IjIiLAoiaGlzX29yZGVyX2lkIiA6ICIxMDk2ODI0IiwKIm9yZGVyX2Rh
dGVfdGltZSI6IjIwMTgtMDQtMTggMTY6NTg6MDAiLAoib3JkZXJfZGVzY3JpcHRpb24iOiJQT1NU
IFRFU1RJTkciLAoib3JkZXJfY2F0ZWdvcnkiOiJUUkVBVE1FTlQgUFJPQ0VEVVJFIiwKInJlbGF0
aW9uc2hpcCI6IiIsCiJvcmRlcl9ieSI6IklSV0FOIElCUkFISU0iLAoib3JkZXJfbG9jYXRpb24i
OiJXQVJEIDkiLAoicHJpb3JpdHkiOiIiLAoic3RhdHVzIjoiU1VCTUlUVEVEIiwKIm9wdGlvbiI6
IiIsCiJhdHRhY2htZW50IjoiIiwKImF1ZGl0X3RyYWlsIjoiIgp9</inboundTemplate>
            <outboundTemplate encoding="base64">ewoicGF0aWVudF9pZCI6IjIiLAoiaGlzX29yZGVyX2lkIiA6ICIxMDk2ODI0IiwKIm9yZGVyX2Rh
dGVfdGltZSI6IjIwMTgtMDQtMTggMTY6NTg6MDAiLAoib3JkZXJfZGVzY3JpcHRpb24iOiJQT1NU
IFRFU1RJTkciLAoib3JkZXJfY2F0ZWdvcnkiOiJUUkVBVE1FTlQgUFJPQ0VEVVJFIiwKInJlbGF0
aW9uc2hpcCI6IiIsCiJvcmRlcl9ieSI6IklSV0FOIElCUkFISU0iLAoib3JkZXJfbG9jYXRpb24i
OiJXQVJEIDkiLAoicHJpb3JpdHkiOiIiLAoic3RhdHVzIjoiU1VCTUlUVEVEIiwKIm9wdGlvbiI6
IiIsCiJhdHRhY2htZW50IjoiIiwKImF1ZGl0X3RyYWlsIjoiIgp9</outboundTemplate>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>3</metaDataId>
          <name>GET Orders</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>true</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;GET&apos;){
	var query = &apos;SELECT o.patient_id, &apos;;
	query += &apos;case &apos;;
	query += &apos;when patient_gender = \&apos;M\&apos; then \&apos;MALE\&apos; &apos;;
	query += &apos;when patient_gender = \&apos;F\&apos; then \&apos;FEMALE\&apos; &apos;;
	query += &apos;when patient_gender = \&apos;O\&apos; then \&apos;OTHER\&apos; &apos;;
	query += &apos;end as patient_gender, &apos;;
	query += &apos;DATE_FORMAT(o.patient_dob, &quot;%e %b %Y&quot;) as patient_dob, o.patient_name, o.device_code, &apos;;
	query += &apos;o.order_status, o.his_order_id, o.his_order_discipline, o.his_ordered_by, o.his_appointment_date, &apos;;
	query += &apos;d.device_name &apos;
	query += &apos;FROM orders o &apos;;
	query += &apos;LEFT JOIN device d ON d.device_code=o.device_code &apos;;
	var queryParameters = [];

	if($(&apos;functParameterTest&apos;)(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;order_id&apos;))){
		query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
		query += &apos;o.his_order_id = ? &apos;;
		queryParameters.push(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;order_id&apos;));
	}

	if($(&apos;functParameterTest&apos;)(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;patient_mrn&apos;))){
		query += (queryParameters.length==0) ? &apos; WHERE&apos; : &apos; AND &apos;;
		query += &apos;o.patient_mrn = ? &apos;;
		queryParameters.push(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;patient_mrn&apos;));
	}

	if($(&apos;functParameterTest&apos;)(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;discipline&apos;))){
		query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
		query += &apos;o.modality = ? &apos;;
		queryParameters.push(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;discipline&apos;));
	}

	if($(&apos;functParameterTest&apos;)(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;device&apos;))){
		query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
		query += &apos;o.device_code = ? &apos;;
		queryParameters.push(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;device&apos;));
	}

	if($(&apos;functParameterTest&apos;)(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;order_status&apos;))){
		if(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;order_status&apos;)!=&apos;ALL&apos;){
			query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
			query += &apos;o.order_status = ? &apos;;
			queryParameters.push(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;order_status&apos;).split(&apos;_&apos;).join(&apos; &apos;));	
		}
	}

	query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
	query += &apos;  DATE(o.his_appointment_date) = DATE(NOW()) &apos;;

	var result = $(&apos;functExecuteQuery&apos;)(query,queryParameters);

	var countResult = result.size();
	var count = 1;
	var orders = &apos;&apos;;
	while (result.next()){
		orders += &apos;{&apos;;
		orders += &apos;&quot;patient_id&quot;:&quot;&apos;+result.getString(1)+&apos;&quot;,&apos;;
		orders += &apos;&quot;patient_gender&quot;:&quot;&apos;+result.getString(2)+&apos;&quot;, &apos;;
		orders += &apos;&quot;patient_dob&quot;:&quot;&apos;+result.getString(3)+&apos;&quot;,&apos;
		orders += &apos;&quot;patient_name&quot;:&quot;&apos;+result.getString(4)+&apos;&quot;,&apos;;
		orders += &apos;&quot;device_code&quot;:&quot;&apos;+result.getString(5)+&apos;&quot;,&apos;
		orders += &apos;&quot;order_status&quot;:&quot;&apos;+result.getString(6)+&apos;&quot;,&apos;;
		orders += &apos;&quot;his_order_id&quot;:&quot;&apos;+result.getString(7)+&apos;&quot;,&apos;;
		orders += &apos;&quot;his_order_discipline&quot;:&quot;&apos;+result.getString(8)+&apos;&quot;,&apos;;
		orders += &apos;&quot;his_ordered_by&quot;:&quot;&apos;+result.getString(9)+&apos;&quot;,&apos;;
		orders += &apos;&quot;his_appointment_date&quot;:&quot;&apos;+result.getString(10)+&apos;&quot;, &apos;;
		orders += &apos;&quot;device_name&quot;:&quot;&apos;+result.getString(11)+&apos;&quot;}&apos;;
		if(count&lt;countResult){
			orders += &apos;, &apos;;
		}
		count++;
		};

	var responseData;
	var meta = &apos;{&quot;lastUpdated&quot;:&quot;&apos;+ new Date().toISOString()+&apos;&quot;}&apos;;
		responseData = &apos;{&quot;resourceType&quot;:&quot;bundle&quot;,&apos;;
		responseData += &apos;&quot;meta&quot;:&apos; + meta + &apos;, &apos;;
		responseData += &apos;&quot;type&quot;:&quot;searchset&quot;, &apos;;
		responseData += &apos;&quot;total&quot;:&quot;&apos; + countResult + &apos;&quot;, &apos;;
		responseData += &apos;&quot;link&quot;:&quot;&quot;, &apos;;
		responseData += &apos;&quot;entry&quot;:[&apos;+ orders+&apos;] &apos;;
		responseData += &apos;}&apos;;
		$(&apos;functFinalResponse&apos;)(responseData);
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.mapper.MapperStep>
                <name>OrderList</name>
                <sequenceNumber>0</sequenceNumber>
                <variable>OrderList</variable>
                <mapping></mapping>
                <defaultValue>000</defaultValue>
                <replacements/>
                <scope>CHANNEL</scope>
              </com.mirth.connect.plugins.mapper.MapperStep>
            </elements>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>4</metaDataId>
          <name>Generate Worklist Order</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>function UpperCase(input){
	return input.toUpperCase();
}

function UpperCasePN(input){
	var edited = input.replace(&apos; &apos;,&apos;^&apos;);
	return edited.toUpperCase();
}

var data = JSON.parse(connectorMessage.getRawData());
var patient_mrn = data[&apos;patient_mrn&apos;];
var patient_name = data[&apos;patient_name&apos;];
var modality = data[&apos;modality&apos;];
var ordered_by = data[&apos;ordered_by&apos;];
var his_order_id = data[&apos;his_order_id&apos;];
var decipline = data[&apos;decipline&apos;];


logger.info(his_order_id)
logger.info(patient_name)
logger.info(modality)

var text =   
&quot;(0008,0050) SH  &quot;+UpperCase(his_order_id)+&quot;\n&quot; +
&quot;(0008,0005) CS  [ISO_IR 100]\n&quot; +
&quot;(0010,0010) PN  &quot;+UpperCasePN(patient_name)+&quot;\n&quot; +
&quot;(0008,0060) CS  &quot;+UpperCase(modality)+&quot;\n&quot; +
&quot;(0010,0020) LO  &quot;+UpperCase(patient_mrn)+&quot;\n&quot; +
&apos;(0040,0100) SQ\n\
(fffe,e000) -\n\
(0008,0060) CS  MR\n\
(0032,1070) LO\n\
(0040,0001) AE  TT67\n\
(0040,0002) DA  19960805\n\
(0040,0003) TM  175609\n\
(0040,0006) PN  BROWN\n\
(0040,0007) LO  EXAM46\n\
(0040,0009) SH  SPD4548\n\
(0040,0010) SH  STN94594\n\
(0040,0011) SH  B58F56\n\
(0040,0012) LO\n\
(0040,0400) LT\n\
(fffe,e00d) -\n\
(fffe,e0dd) -\n\
(0040,1001) SH  RP4474\n\
(0040,1003) SH  LOW\n&apos;

FileUtil.write(&apos;/home/hafizh/worklist2018.dump&apos;, false, text);


logger.info(&quot;text:&quot;+text);
/*
&quot;(0008,0005) CS  [ISO_IR 100]&quot; +&quot;\n&quot; + 
&quot;(0010,0010) PN  MOZART^WOLFGANG^AMADEUS&quot;
&quot;(0010,0020) LO  MWA484763&quot;
(0010,0030) DA  17911205
(0010,0040) CS  M
(0010,2000) LO  ABZESS
(0010,2110) LO  BARIUMSULFAT
(0020,000d) UI  1.2.276.0.7230010.3.2.110
(0032,1032) PN  MILLER
(0032,1060) LO  EXAM8
(0040,0100) SQ
(fffe,e000) -
(0008,0060) CS  MR
(0032,1070) LO
(0040,0001) AE  TT67
(0040,0002) DA  19960805
(0040,0003) TM  175609
(0040,0006) PN  BROWN
(0040,0007) LO  EXAM46
(0040,0009) SH  SPD4548
(0040,0010) SH  STN94594
(0040,0011) SH  B58F56
(0040,0012) LO
(0040,0400) LT
(fffe,e00d) -
(fffe,e0dd) -
(0040,1001) SH  RP4474
(0040,1003) SH  LOW
&quot;*/</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>10</metaDataId>
          <name>PUT Order &quot;IN PROGRESS&quot;</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;PUT&apos;){
	if(connectorMessage.getRawData() != &apos;&apos;){
		var msg = JSON.parse(connectorMessage.getRawData());
		
		var his_order_id = msg.his_order_id;
		var order_status = &apos;IN PROGRESS&apos;;
//		
		var query = &quot;UPDATE orders SET order_status = ? WHERE his_order_id = ? &quot;
		var queryParameters = [order_status, his_order_id];
		$(&apos;functExecuteInsertQuery&apos;)(query,queryParameters);
	}
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>11</metaDataId>
          <name>PUT Order &quot;COMPLETED&quot;</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;PUT&apos;){
	if(connectorMessage.getRawData() != &apos;&apos;){
		var msg = JSON.parse(connectorMessage.getRawData());
		
		var his_order_id = msg.his_order_id;
		var order_status = &apos;COMPLETED&apos;;
		
		var query = &quot;UPDATE orders SET order_status = ? WHERE his_order_id = ? &quot;
		var queryParameters = [order_status, his_order_id];
		$(&apos;functExecuteInsertQuery&apos;)(query,queryParameters);
	}
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>12</metaDataId>
          <name>PUT Order &quot;DISCONTINUED&quot;</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;PUT&apos;){
	if(connectorMessage.getRawData() != &apos;&apos;){
		var msg = JSON.parse(connectorMessage.getRawData());
		
		var his_order_id = msg.his_order_id;
		var order_status = &apos;DISCONTINUED&apos;;
//		
		var query = &quot;UPDATE orders SET order_status = ? WHERE his_order_id = ? &quot;
		var queryParameters = [order_status, his_order_id];
		$(&apos;functExecuteInsertQuery&apos;)(query,queryParameters);
	}
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>14</metaDataId>
          <name>POST Result &amp; Exam from device</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;POST&apos;){
	if(connectorMessage.getRawData() != &apos;&apos;){
		var msg = JSON.parse(connectorMessage.getRawData());
		var patient_id = msg.patient.patient_id;
		var patient_gender = msg.patient.patient_gender;
		var patient_dob = msg.patient.patient_date_of_birth;
		var patient_name = msg.patient.patient_name;
		
		var his_order_id = msg.result_exam_data.his_order_id;
		var result_type = msg.result_exam_data.format_type;
		var result_data = JSON.stringify(msg.result_exam_data);
		var order_status = msg.result_exam_data.order_status;

		
		var query = &quot;INSERT INTO result_exam (his_order_id, patient_id, result_type, result_data) VALUES (?,?,?,?)&quot;
		var queryParameters = [his_order_id, patient_id, result_type, result_data];
		$(&apos;functExecuteInsertQuery&apos;)(query,queryParameters);

		var queryUpdateOrderStatus = &quot;UPDATE orders SET order_status = ? WHERE patient_id=? AND his_order_id= ?&quot;;
		var queryUpdateOrderStatusParameters = [order_status,  patient_id, his_order_id];
		$(&apos;functExecuteInsertQuery&apos;)(queryUpdateOrderStatus,queryUpdateOrderStatusParameters);

		var queryOrdersCoe = &quot;UPDATE his_patient_coe SET status = &apos;COMPLETED&apos; WHERE his_order_id = ? AND status = &apos;SUBMITTED&apos;&quot;;
		var queryParametersOrdersCoe = [his_order_id];
		$(&apos;functExecuteInsertQuery&apos;)(queryOrdersCoe,queryParametersOrdersCoe);

		if(his_order_id==null || his_order_id==&apos;&apos;){
			logger.info(&apos;takde order id.. ni mesti spiro atau fundus&apos;);
		}
		
		
	}
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>16</metaDataId>
          <name>PUT Order Without Order Id</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>
if(sourceMap.get(&apos;method&apos;)==&apos;POST&apos;){
	if(connectorMessage.getRawData() != &apos;&apos;){
		var msg = JSON.parse(connectorMessage.getRawData());
		var patient_id = msg.patient.patient_id;
		var his_order_id = msg.result_exam_data.his_order_id;
		var result_type = msg.result_exam_data.format_type;

		if(his_order_id==null || his_order_id==&apos;&apos;){
			var device_code = &apos;&apos;;
			switch(result_type){
				case &apos;application/jpeg&apos;: //fundus
					device_code = &quot;FDM001&quot;;
				break
				case &apos;application/pdf&apos;: //spirometer
					device_code = &quot;SPM001&quot;;
				break;
			}
			var query = &quot;SELECT his_order_id, device_code FROM orders &quot;;
			query += &quot;WHERE patient_id=? AND device_code =? AND DATE(his_appointment_date)=DATE(NOW()) &quot;;
			
			var queryParameters = [patient_id, device_code];
			var result = $(&apos;functExecuteQuery&apos;)(query,queryParameters);

			var his_order_ids;
			while(result.next()){
				his_order_ids += result.getString(1);
				}	
		}
	}
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>17</metaDataId>
          <name>GET Order Media</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;GET&apos;){
	
	var query = &quot;SELECT result_type, result_data FROM result_exam &quot;
	var queryParameters = [];

	if($(&apos;functParameterTest&apos;)(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;order_id&apos;))){
		query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
		query += &apos; his_order_id = ? &apos;;
		queryParameters.push(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;order_id&apos;));
	}

	var result = $(&apos;functExecuteQuery&apos;)(query,queryParameters);

	var countResult = result.size(); 
	var count = 1;
	var media_type = &apos;&apos;;
	var media_data = [];
	while (result.next()){
		count++;
		var data = JSON.parse(result.getString(2));
		media_type = result.getString(1);
		media_data.push(data.url);
		};
		
	var mediaObject = {
		type:media_type,
		media: media_data
	};
	
	var responseData;
	var meta = &apos;{&quot;lastUpdated&quot;:&quot;&apos;+ new Date().toISOString()+&apos;&quot;}&apos;;
		responseData = &apos;{&quot;resourceType&quot;:&quot;bundle&quot;,&apos;;
		responseData += &apos;&quot;meta&quot;:&apos; + meta + &apos;, &apos;;
		responseData += &apos;&quot;type&quot;:&quot;searchset&quot;, &apos;;
		responseData += &apos;&quot;total&quot;:&quot;&apos; + countResult + &apos;&quot;, &apos;;
		responseData += &apos;&quot;link&quot;:&quot;&quot;, &apos;;
		responseData += &apos;&quot;entry&quot;:&apos;+ JSON.stringify(mediaObject)+&apos; &apos;;
		responseData += &apos;}&apos;;
		$(&apos;functFinalResponse&apos;)(responseData);
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>19</metaDataId>
          <name>GET Order Summary</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;GET&apos;){
	
	var query = &quot;SELECT order_status, count(id) AS total FROM orders &quot;;
	var queryParameters = [];
	
	if($(&apos;functParameterTest&apos;)(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;device&apos;))){
		query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
		query += &apos;device_code = ? &apos;;
		queryParameters.push(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;device&apos;));
	}
	
	query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
	query += &quot;DATE(his_appointment_date) = DATE(NOW()) &quot;;
	query += &quot;GROUP BY order_status&quot;;
	var result = $(&apos;functExecuteQuery&apos;)(query,queryParameters);

	var countResult = result.size(); 
	var count = 1;
	var order_status = &apos;&apos;;
	
	while (result.next()){
		var data_key = &apos;&apos;;
		order_status += &apos; &quot;&apos;+result.getString(1).split(&apos; &apos;).join(&apos;_&apos;)+&apos;&quot;:&quot;&apos;+result.getString(2)+&apos;&quot; &apos;;
		if(count&lt;countResult){
			order_status += &apos;, &apos;;
		}
		count++;
		};
	order_status = &quot;{&quot;+order_status+&quot;}&quot;;
	
	var responseData = $(&apos;responseDataFHIR&apos;)(countResult,order_status);
	$(&apos;functFinalResponse&apos;)(responseData);
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
var getResponseContent = channelMap.get(&apos;responseContent&apos;);
if(getResponseContent!=null){
	return channelMap.get(&apos;responseContent&apos;).toString();	
}
</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.1">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.1">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>true</enabled>
          <lastModified>
            <time>1524314485939</time>
            <timezone>Asia/Kuala_Lumpur</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
      </exportData>
    </channel>
    <channel version="3.5.1">
      <id>156c791a-761c-484f-8bcd-b2b5bcd88ec3</id>
      <nextMetaDataId>23</nextMetaDataId>
      <name>Internal Device RESTful</name>
      <description></description>
      <revision>161</revision>
      <sourceConnector version="3.5.1">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.5.1">
          <pluginProperties>
            <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="3.5.1">
  <authType>NONE</authType>
            </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
          </pluginProperties>
          <listenerConnectorProperties version="3.5.1">
            <host>0.0.0.0</host>
            <port>8082</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.5.1">
            <responseVariable>Postprocessor</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <xmlBody>false</xmlBody>
          <parseMultipart>true</parseMultipart>
          <includeMetadata>false</includeMetadata>
          <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
          <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
          <responseContentType>application/json</responseContentType>
          <responseDataTypeBinary>false</responseDataTypeBinary>
          <responseStatusCode></responseStatusCode>
          <responseHeaders class="linked-hash-map">
            <entry>
              <string>Content-Type</string>
              <list>
                <string>application/json</string>
              </list>
            </entry>
            <entry>
              <string>Access-Control-Allow-Origin</string>
              <list>
                <string>*</string>
              </list>
            </entry>
            <entry>
              <string>Access-Control-Allow-Methods</string>
              <list>
                <string>*</string>
              </list>
            </entry>
            <entry>
              <string>Access-Control-Allow-Headers</string>
              <list>
                <string>*</string>
              </list>
            </entry>
          </responseHeaders>
          <charset>UTF-8</charset>
          <contextPath>internal-device</contextPath>
          <timeout>0</timeout>
          <staticResources/>
        </properties>
        <transformer version="3.5.1">
          <elements>
            <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
              <name>GlobalFunctions</name>
              <sequenceNumber>0</sequenceNumber>
              <script>function executeQuery(query,queryParameters){
	var gateway_database = globalChannelMap.get(&apos;gateway_database&apos;);
	var user = globalChannelMap.get(&apos;gateway_database_user&apos;);
	var pass = globalChannelMap.get(&apos;gateway_database_pass&apos;);
	var dbConn;
	try {
		dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://&apos;+gateway_database,user,pass);
		var result = dbConn.executeCachedQuery(query,queryParameters);
		return result;
	} finally {
		if (dbConn) { 
			dbConn.close();
		}
	}
}

function executeInsertQuery(query,queryParameters){
	var dbConn;
	try {
		dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/integdb&apos;,&apos;root&apos;,&apos;re^mp123&apos;);
		var result = dbConn.executeUpdate(query,queryParameters);
		return result;
	} finally {
		if (dbConn) { 
			dbConn.close();
		}
	}
}

function finalResponse(jsonString){
	channelMap.put(&apos;responseContent&apos;, jsonString);
	channelMap.put(&apos;responseContentType&apos;, &apos;application/fhir+json&apos;);
}

function parameterTest(bool){
	if(bool!==null){
		return true;
	} else {
		return false;
	}
}

globalMap.put(&apos;functExecuteQuery&apos;, validate(executeQuery, &apos;&apos;, new Array()));
globalMap.put(&apos;functExecuteInsertQuery&apos;, validate(executeInsertQuery, &apos;&apos;, new Array()));
globalMap.put(&apos;functFinalResponse&apos;, validate(finalResponse, &apos;&apos;, new Array()));
globalMap.put(&apos;functParameterTest&apos;,  validate(parameterTest, &apos;&apos;, new Array()));</script>
            </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
              <name>RouteController</name>
              <sequenceNumber>1</sequenceNumber>
              <script>var prefixService = &quot;/internal-device&quot;;

if(sourceMap.get(&apos;contextPath&apos;)==null){
	var rawData = JSON.parse(connectorMessage.getRawData());
	var contextPath = rawData.routePath;
	var path = contextPath.split(&apos;/&apos;);
	var route = path[0].toString();
	var routePath = path[1].toString();
} else {
	var contextPath = sourceMap.get(&apos;contextPath&apos;).toString();
	var params = contextPath.substring(prefixService.length).split(&apos;/&apos;);
	var route = String(params[1]);
	var routePath = String(params[2]);
}
switch(route){
	case &apos;result&apos;:
		switch(routePath){
			case &apos;order&apos;:
				destinationSet.removeAllExcept(1);
			break;
		}
	break;
	case &apos;endo&apos;:
		switch(routePath){
			case &apos;deviceperform&apos;:
				destinationSet.removeAllExcept(11);
			break;
			case &apos;processorder&apos;:
				destinationSet.removeAllExcept(12);
			break;
			case &apos;new-order&apos;:
				destinationSet.removeAllExcept(15);
			break;
			case &apos;end-process&apos;:
//				destinationSet.removeAllExcept(14); //endo actual device
				destinationSet.removeAllExcept(21); //endo simulation device
			break;
		}
	break;
	case &apos;device&apos;:
		switch(routePath){
			case &apos;info&apos;:
				destinationSet.removeAllExcept(13);
			break;
			case &apos;update-order&apos;:
				destinationSet.removeAllExcept(22);
			break;
		}
		break;
	default:
	break;
}</script>
            </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          </elements>
          <inboundTemplate encoding="base64">ewoJInBhdGllbnRfbXJuIiA6ICI4NzEyMzEyMyIsCgkicGF0aWVudF9uYW1lIiA6ICJIYWZpeiBI
YW1kaSIsCgkiaGlzX29yZGVyX2lkIiA6ICIxMjMxMjEiLAoJImhpc19kaWNpcGxpbmUiIDogIk9O
RyIsCgkib3JkZXJlZF9ieSIgOiAiQWxpIEFidSIsCgkibW9kYWxpdHkiIDogIlVTIgp9</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>RAW</inboundDataType>
          <outboundDataType>RAW</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
            <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
            <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.5.1">
          <elements/>
        </filter>
        <transportName>HTTP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.1">
          <metaDataId>1</metaDataId>
          <name>POST Result/Exam</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;POST&apos;){
	if(connectorMessage.getRawData() != &apos;&apos;){
		var msg = JSON.parse(connectorMessage.getRawData());
		var patient_id = msg.patient.patient_id;
		var patient_gender = msg.patient.patient_gender;
		var patient_dob = msg.patient.patient_date_of_birth;
		var patient_name = msg.patient.patient_name;
		
		var his_order_id = msg.result_exam_data.his_order_id;
		var result_type = msg.result_exam_data.format_type;
		var result_data = JSON.stringify(msg.result_exam_data.entry);
		var order_status = msg.result_exam_data.order_status;
		
		var query = &quot;INSERT INTO result_exam (his_order_id, patient_id, result_type, result_data) VALUES (?,?,?,?)&quot;
		var queryParameters = [his_order_id, patient_id, result_type, result_data];
		$(&apos;functExecuteInsertQuery&apos;)(query,queryParameters);

		var queryUpdateOrderStatus = &quot;UPDATE orders SET order_status = ? WHERE patient_id=? AND his_order_id= ?&quot;;
		var queryUpdateOrderStatusParameters = [order_status,  patient_id, his_order_id];
		$(&apos;functExecuteInsertQuery&apos;)(queryUpdateOrderStatus,queryUpdateOrderStatusParameters);
	}
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>RouteMapper</name>
                <sequenceNumber>0</sequenceNumber>
                <script>//logger.info(&apos;check in sini&apos;);
//var contextPath = $(&apos;contextPath&apos;);
//var prefixService = &quot;/integration&quot;;
//var params = contextPath.substring(prefixService.length).split(&apos;/&apos;);
//
//var route = String(params[1]);
//var routePath = String(params[2]);
//
//switch(route){
//	case &apos;orders&apos;:
//		switch(routePath){
//			case &apos;neworder&apos;:
//				logger.info(&apos;in the new order&apos;);
//				destinationSet.removeAllExcept([1]);
//				
//			break;
//			case &apos;orderlist&apos;:
//				logger.info(&apos;listing order&apos;);
//				destinationSet.removeAllExcept([3]);
//			break;
//		}
//	break;
//	default:
//	break;
//}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>11</metaDataId>
          <name>POST Endoscopy Order</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>true</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://172.19.64.7:8082/internal-device/endo/processorder</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>post</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content>${message.rawData}</content>
            <contentType>text/plain</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>ENDO Body Content Prepare</name>
                <sequenceNumber>0</sequenceNumber>
                <script>if(sourceMap.get(&apos;method&apos;)==&apos;POST&apos;){
	logger.info(connectorMessage.getRawData())
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">ewoidHhuX2lkIjoiMTAwIgp9</inboundTemplate>
            <outboundTemplate encoding="base64">ewoidHhuX2lkIjoiMTAwIgp9</outboundTemplate>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>12</metaDataId>
          <name>POST Endo</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>logger.info(connectorMessage.getRawData());

if(sourceMap.get(&apos;method&apos;)==&apos;POST&apos;){
	if(connectorMessage.getRawData() != &apos;&apos;){
		var msg = JSON.parse(connectorMessage.getRawData());
		var patient_id = msg.patient_id;
		var his_order_id = msg.his_order_id;
		
		var query = &quot;INSERT INTO endo_test (his_order_id, patient_id) VALUES (?,?)&quot;
		var queryParameters = [his_order_id, patient_id];
		$(&apos;functExecuteInsertQuery&apos;)(query,queryParameters);

		var order_status = &apos;IN PROGRESS&apos;;
		var queryOrder = &quot;UPDATE orders SET order_status=? WHERE patient_id=? AND his_order_id= ? &quot;;
		var queryOrderParameters = [order_status, patient_id, his_order_id];
		$(&apos;functExecuteInsertQuery&apos;)(queryOrder,queryOrderParameters);
	}
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>13</metaDataId>
          <name>GET Device detail</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>
if(sourceMap.get(&apos;method&apos;)==&apos;GET&apos;){
	var query = &apos;SELECT d.medical_device, d.procedure, d.dicom_worklist, d.online_status &apos;;
	query += &apos;FROM device d&apos;;
	var queryParameters = [];

	if($(&apos;functParameterTest&apos;)(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;code&apos;))){
		query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
		query += &apos;d.device_code = ? &apos;;
		queryParameters.push(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;code&apos;));
	}

	var result = $(&apos;functExecuteQuery&apos;)(query,queryParameters);

	var countResult = result.size();
	var count = 1;
	var device = &apos;&apos;;
	while (result.next()){
		device += &apos;{&apos;;
		device += &apos;&quot;medical_device&quot;:&quot;&apos;+result.getString(1)+&apos;&quot;,&apos;;
		device += &apos;&quot;procedure&quot;:&quot;&apos;+result.getString(2)+&apos;&quot;, &apos;;
		device += &apos;&quot;dicom_worklist&quot;:&quot;&apos;+result.getString(3)+&apos;&quot;,&apos;
		device += &apos;&quot;online_status&quot;:&quot;&apos;+result.getString(4)+&apos;&quot; &apos;;
		device += &apos;}&apos;;
		if(count&lt;countResult){
			device += &apos;, &apos;;
		}
		count++;
		};

	var responseData;
	var meta = &apos;{&quot;lastUpdated&quot;:&quot;&apos;+ new Date().toISOString()+&apos;&quot;}&apos;;
		responseData = &apos;{&quot;resourceType&quot;:&quot;bundle&quot;,&apos;;
		responseData += &apos;&quot;meta&quot;:&apos; + meta + &apos;, &apos;;
		responseData += &apos;&quot;type&quot;:&quot;searchset&quot;, &apos;;
		responseData += &apos;&quot;total&quot;:&quot;&apos; + countResult + &apos;&quot;, &apos;;
		responseData += &apos;&quot;link&quot;:&quot;&quot;, &apos;;
		responseData += &apos;&quot;entry&quot;: &apos;+ device +&apos;&apos;;
		responseData += &apos;}&apos;;
		$(&apos;functFinalResponse&apos;)(responseData);
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>14</metaDataId>
          <name>PUT End Endo Process</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://172.19.64.200:5000/order/${endo_order_id}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>put</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content>${message.rawData}</content>
            <contentType>text/plain</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>Body Constructor</name>
                <sequenceNumber>0</sequenceNumber>
                <script>logger.info(&apos;coming here&apos;);
//var msg = JSON.parse(connectorMessage.getRawData());
//channelMap.put(&apos;endo_order_id&apos;,msg.his_order_id);</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>15</metaDataId>
          <name>POST to ENDO Device 172.19.64.200</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://172.19.64.200:5000/order/endo</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>post</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content>${endoOrderMessage}</content>
            <contentType>text/plain</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <sequenceNumber>0</sequenceNumber>
                <script>var msgReceive = JSON.parse(connectorMessage.getRawData());

var patient_id = msgReceive.patient.patient_id;
var patient_name = msgReceive.patient.patient_name;
var order_id = msgReceive.order_data.his_order_id;
var patient_ic = msgReceive.patient.patient_ic;

var sendMessage = &apos;{&apos;;
sendMessage += &apos;&quot;patient_id&quot;:&quot;&apos;+ patient_id +&apos;&quot;, &apos;;
sendMessage += &apos;&quot;patient_ic&quot;:&quot;&apos;+ patient_ic +&apos;&quot;, &apos;;
sendMessage += &apos;&quot;patient_name&quot;:&quot;&apos;+ patient_name + &apos;&quot;, &apos;;
sendMessage += &apos;&quot;order_id&quot;:&quot;&apos;+ order_id +&apos;&quot;&apos;;
sendMessage += &apos;}&apos;;

channelMap.put(&apos;endoOrderMessage&apos;,sendMessage);</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>17</metaDataId>
          <name>PUT Update Status Order</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/integdb</url>
            <username>root</username>
            <password>re^mp123</password>
            <query>var dbConn;

try {
	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/integdb&apos;,&apos;root&apos;,&apos;re^mp123&apos;);
	var query = &quot;UPDATE orders SET order_status = &apos;IN PROGRESS&apos; WHERE device_code IN (&apos;SPM001&apos;,&apos;FCM001&apos;) AND order_status = &apos;NEW&apos;&quot;;
	var queryParameters = [];
	var result = dbConn.executeCachedQuery(query,queryParameters);
	

} finally {
	if (dbConn) { 
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>21</metaDataId>
          <name>ENDO SIM LOCALHOST</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://localhost:5000/order/${his_order_id}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>put</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content>${his_order_id}</content>
            <contentType>text/plain</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>Body Constructor</name>
                <sequenceNumber>0</sequenceNumber>
                <script>var contextPath = sourceMap.get(&apos;contextPath&apos;).toString();
var prefixService = &quot;/internal-device&quot;;
var params = contextPath.substring(prefixService.length).split(&apos;/&apos;);
var his_order_id = String(params[3]);
channelMap.put(&apos;his_order_id&apos;,his_order_id);

logger.info(&apos;masuk sini&apos;);
if(sourceMap.get(&apos;method&apos;)==&apos;PUT&apos;){
	var his_order_id = his_order_id;
	var order_status = &apos;COMPLETED&apos;;
	
	var queryOrder = &quot;UPDATE orders SET order_status = ? WHERE his_order_id = ? &quot;
	var queryOrderParameters = [order_status, his_order_id];
	$(&apos;functExecuteInsertQuery&apos;)(queryOrder,queryOrderParameters);

	var queryOrder = &quot;UPDATE his_patient_coe SET status = ? WHERE his_order_id = ? &quot;
	var queryOrderParameters = [order_status, his_order_id];
	$(&apos;functExecuteInsertQuery&apos;)(queryOrder,queryOrderParameters);
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>22</metaDataId>
          <name>PUT Update Device Order Status IN_PROGRESS</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;PUT&apos;){
	if(connectorMessage.getRawData() != &apos;&apos;){
		var msg = JSON.parse(connectorMessage.getRawData());
		
		var his_order_id = msg.his_order_id;
		var order_status = &apos;IN PROGRESS&apos;;
//		
		var query = &quot;UPDATE orders SET order_status = ? WHERE his_order_id = ? &quot;
		var queryParameters = [order_status, his_order_id];
		$(&apos;functExecuteInsertQuery&apos;)(query,queryParameters);

		var query = &quot;UPDATE his_patient_coe SET status = ? WHERE his_order_id = ? &quot;
		var queryParameters = [order_status, his_order_id];
		$(&apos;functExecuteInsertQuery&apos;)(query,queryParameters);
	}
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
var getResponseContent = channelMap.get(&apos;responseContent&apos;);
if(getResponseContent!=null){
	return channelMap.get(&apos;responseContent&apos;).toString();	
}
</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.1">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.1">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>true</enabled>
          <lastModified>
            <time>1524312340573</time>
            <timezone>Asia/Kuala_Lumpur</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
      </exportData>
    </channel>
    <channel version="3.5.1">
      <id>445b8074-dc02-47f3-8c44-5486654ff183</id>
      <nextMetaDataId>22</nextMetaDataId>
      <name>HIS Sample Data</name>
      <description></description>
      <revision>119</revision>
      <sourceConnector version="3.5.1">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.5.1">
          <pluginProperties>
            <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="3.5.1">
  <authType>NONE</authType>
            </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
          </pluginProperties>
          <listenerConnectorProperties version="3.5.1">
            <host>0.0.0.0</host>
            <port>8083</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.5.1">
            <responseVariable>Postprocessor</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <xmlBody>false</xmlBody>
          <parseMultipart>true</parseMultipart>
          <includeMetadata>false</includeMetadata>
          <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
          <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
          <responseContentType>application/json</responseContentType>
          <responseDataTypeBinary>false</responseDataTypeBinary>
          <responseStatusCode></responseStatusCode>
          <responseHeaders class="linked-hash-map">
            <entry>
              <string>Content-Type</string>
              <list>
                <string>application/json</string>
              </list>
            </entry>
            <entry>
              <string>Access-Control-Allow-Origin</string>
              <list>
                <string>*</string>
              </list>
            </entry>
            <entry>
              <string>Access-Control-Allow-Methods</string>
              <list>
                <string>*</string>
              </list>
            </entry>
            <entry>
              <string>Access-Control-Allow-Headers</string>
              <list>
                <string>*</string>
              </list>
            </entry>
          </responseHeaders>
          <charset>UTF-8</charset>
          <contextPath>his-sample</contextPath>
          <timeout>0</timeout>
          <staticResources/>
        </properties>
        <transformer version="3.5.1">
          <elements>
            <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
              <name>GlobalFunctions</name>
              <sequenceNumber>0</sequenceNumber>
              <script>function executeQuery(query,queryParameters){
	var gateway_database = globalChannelMap.get(&apos;gateway_database&apos;);
	var user = globalChannelMap.get(&apos;gateway_database_user&apos;);
	var pass = globalChannelMap.get(&apos;gateway_database_pass&apos;);
	var dbConn;
	try {
		dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://&apos;+gateway_database,user,pass);
		var result = dbConn.executeCachedQuery(query,queryParameters);
		return result;
	} finally {
		if (dbConn) { 
			dbConn.close();
		}
	}
}

function executeInsertQuery(query,queryParameters){
	var gateway_database = globalChannelMap.get(&apos;gateway_database&apos;);
	var user = globalChannelMap.get(&apos;gateway_database_user&apos;);
	var pass = globalChannelMap.get(&apos;gateway_database_pass&apos;);
	var dbConn;
	try {
		dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://&apos;+gateway_database,user,pass);
		var result = dbConn.executeUpdate(query,queryParameters);
		return result;
	} finally {
		if (dbConn) { 
			dbConn.close();
		}
	}
}

function finalResponse(jsonString){
	channelMap.put(&apos;responseContent&apos;, jsonString);
	channelMap.put(&apos;responseContentType&apos;, &apos;application/fhir+json&apos;);
}

function parameterTest(bool){
	if(bool!==null){
		return true;
	} else {
		return false;
	}
}

globalMap.put(&apos;functExecuteQuery&apos;, validate(executeQuery, &apos;&apos;, new Array()));
globalMap.put(&apos;functExecuteInsertQuery&apos;, validate(executeInsertQuery, &apos;&apos;, new Array()));
globalMap.put(&apos;functFinalResponse&apos;, validate(finalResponse, &apos;&apos;, new Array()));
globalMap.put(&apos;functParameterTest&apos;,  validate(parameterTest, &apos;&apos;, new Array()));</script>
            </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
              <name>RouteController</name>
              <sequenceNumber>1</sequenceNumber>
              <script>var contextPath = sourceMap.get(&apos;contextPath&apos;).toString();
var prefixService = &quot;/his-sample&quot;;
var params = contextPath.substring(prefixService.length).split(&apos;/&apos;);

var route = String(params[1]);
var routePath = String(params[2]);

switch(route){
	case &apos;order&apos;:
		switch(routePath){
			case &apos;addtolist&apos;:
				destinationSet.removeAllExcept(13);
			break;
			case &apos;new-order&apos;:
				destinationSet.removeAllExcept(16);
			break;
		}
	break;
	case &apos;patient&apos;:
		switch(routePath){
			case &apos;patient-info&apos;:
				destinationSet.removeAllExcept(14);
			break;
			case &apos;patient-coe&apos;:
				destinationSet.removeAllExcept(15);
			break;

			case &apos;add-to-list&apos;:
				destinationSet.removeAllExcept(18);
			break;
			case &apos;select-image&apos;:
				destinationSet.removeAllExcept(19);
			break;

			case &apos;show-selected-image&apos;:
				destinationSet.removeAllExcept(20);
			break;

			case &apos;all-patients&apos;:
				destinationSet.removeAllExcept(21);
			break;
		}
	break;
}</script>
            </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          </elements>
          <inboundTemplate encoding="base64">ewoJInBhdGllbnRfbXJuIiA6ICI4NzEyMzEyMyIsCgkicGF0aWVudF9uYW1lIiA6ICJIYWZpeiBI
YW1kaSIsCgkiaGlzX29yZGVyX2lkIiA6ICIxMjMxMjEiLAoJImhpc19kaWNpcGxpbmUiIDogIk9O
RyIsCgkib3JkZXJlZF9ieSIgOiAiQWxpIEFidSIsCgkibW9kYWxpdHkiIDogIlVTIgp9</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>RAW</inboundDataType>
          <outboundDataType>RAW</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
            <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
            <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.5.1">
          <elements/>
        </filter>
        <transportName>HTTP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.1">
          <metaDataId>13</metaDataId>
          <name>GET Patient Order List</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;GET&apos;){
	var query = &apos;SELECT a.order_name, a.instruction_description, a.quantity, a.frequency, a.date_start, &apos;;
	query += &apos;a.urgency, a.recurring, a.no_of_time_hourly, a.duration, a.ordered_by, a.order_time, a.status &apos;;
	query += &apos;FROM his_addtolist a&apos;;
	var queryParameters = [];

	if($(&apos;functParameterTest&apos;)(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;patient_id&apos;))){
		query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
		query += &apos;a.patient_id = ? &apos;;
		queryParameters.push(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;patient_id&apos;));
	}
	var result = $(&apos;functExecuteQuery&apos;)(query,queryParameters);

	var countResult = result.size();
	var count = 1;
	var addtolist = &apos;&apos;;
	while (result.next()){
		addtolist += &apos;{&apos;;
		addtolist += &apos;&quot;order_name&quot;:&quot;&apos;+result.getString(1)+&apos;&quot;,&apos;;
		addtolist += &apos;&quot;instruction_description&quot;:&quot;&apos;+result.getString(2)+&apos;&quot;, &apos;;
		addtolist += &apos;&quot;quantity&quot;:&quot;&apos;+result.getString(3)+&apos;&quot;,&apos;
		addtolist += &apos;&quot;frequency&quot;:&quot;&apos;+result.getString(4)+&apos;&quot;, &apos;;
		addtolist += &apos;&quot;date_start&quot;:&quot;&apos;+result.getString(5)+&apos;&quot;, &apos;;
		addtolist += &apos;&quot;urgency&quot;:&quot;&apos;+result.getString(6)+&apos;&quot;, &apos;;
		addtolist += &apos;&quot;recurring&quot;:&quot;&apos;+result.getString(7)+&apos;&quot;, &apos;;
		addtolist += &apos;&quot;no_of_time_hourly&quot;:&quot;&apos;+result.getString(8)+&apos;&quot;, &apos;;
		addtolist += &apos;&quot;duration&quot;:&quot;&apos;+result.getString(9)+&apos;&quot;, &apos;;
		addtolist += &apos;&quot;ordered_by&quot;:&quot;&apos;+result.getString(10)+&apos;&quot;, &apos;;
		addtolist += &apos;&quot;order_time&quot;:&quot;&apos;+result.getString(11)+&apos;&quot;, &apos;;
		addtolist += &apos;&quot;status&quot;:&quot;&apos;+result.getString(12)+&apos;&quot; &apos;;
		addtolist += &apos;}&apos;;
		if(count&lt;countResult){
			addtolist += &apos;, &apos;;
		}
		count++;
		};
//
//	var responseData;
//	var meta = &apos;{&quot;lastUpdated&quot;:&quot;&apos;+ new Date().toISOString()+&apos;&quot;}&apos;;
//		responseData = &apos;{&quot;resourceType&quot;:&quot;bundle&quot;,&apos;;
//		responseData += &apos;&quot;meta&quot;:&apos; + meta + &apos;, &apos;;
//		responseData += &apos;&quot;type&quot;:&quot;searchset&quot;, &apos;;
//		responseData += &apos;&quot;total&quot;:&quot;&apos; + countResult + &apos;&quot;, &apos;;
//		responseData += &apos;&quot;link&quot;:&quot;&quot;, &apos;;
//		responseData += &apos;&quot;entry&quot;: [&apos;+ addtolist +&apos;]&apos;;
//		responseData += &apos;}&apos;;
addtolist = &apos;[&apos;+addtolist+&apos;]&apos;;
		var responseData = $(&apos;responseDataFHIR&apos;)(countResult,addtolist);
		$(&apos;functFinalResponse&apos;)(responseData);
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>14</metaDataId>
          <name>GET Patient Info</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;GET&apos;){
	var query = &apos;SELECT p.patient_name, p.identification_no, &apos;;
	query += &apos;DATE_FORMAT(p.date_of_birth,&quot;%d %b %Y&quot;) AS date_of_birth, p.patient_mrn, &apos;;
	query += &apos;CASE &apos;;
	query += &apos;WHEN p.gender = &quot;M&quot; THEN &quot;MALE&quot; &apos;;
	query += &apos;WHEN p.gender = &quot;F&quot; THEN &quot;FEMALE&quot; &apos;;
	query += &apos;WHEN p.gender = &quot;O&quot; THEN &quot;OTHER&quot; &apos;;
	query += &apos;END AS gender, p.date_of_birth as clean_dob, p.gender as clean_gender, p.id as patient_id, p.image &apos;
	query += &apos;FROM his_patient p&apos;;
	var queryParameters = [];

	if($(&apos;functParameterTest&apos;)(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;patient_id&apos;))){
		query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
		query += &apos;p.id = ? &apos;;
		queryParameters.push(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;patient_id&apos;));
	}
	var result = $(&apos;functExecuteQuery&apos;)(query,queryParameters);

	var countResult = result.size();
	var count = 1;
	var patient = &apos;&apos;;
	while (result.next()){
		patient += &apos;{&apos;;
		patient += &apos;&quot;patient_name&quot;:&quot;&apos;+result.getString(1)+&apos;&quot;,&apos;;
		patient += &apos;&quot;identification_no&quot;:&quot;&apos;+result.getString(2)+&apos;&quot;, &apos;;
		patient += &apos;&quot;date_of_birth&quot;:&quot;&apos;+result.getString(3)+&apos;&quot;,&apos;
		patient += &apos;&quot;patient_mrn&quot;:&quot;&apos;+result.getString(4)+&apos;&quot;, &apos;;
		patient += &apos;&quot;gender&quot;:&quot;&apos;+result.getString(5)+&apos;&quot;, &apos;;
		patient += &apos;&quot;clean_dob&quot;:&quot;&apos;+result.getString(6)+&apos;&quot;, &apos;;
		patient += &apos;&quot;clean_gender&quot;:&quot;&apos;+result.getString(7)+&apos;&quot;, &apos;;
		patient += &apos;&quot;patient_id&quot;:&quot;&apos;+result.getString(8)+&apos;&quot;, &apos;;
		patient += &apos;&quot;image&quot;:&quot;&apos;+result.getString(9)+&apos;&quot; &apos;;
		patient += &apos;}&apos;;
		if(count&lt;countResult){
			patient += &apos;, &apos;;
		}
		count++;
		};
		
	patient = (countResult&gt;1) ? &apos;[&apos;+patient+&apos;]&apos; : patient;
	var responseData = $(&apos;responseDataFHIR&apos;)(countResult,patient);
	$(&apos;functFinalResponse&apos;)(responseData);
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>15</metaDataId>
          <name>GET Patient COE</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>logger.info(&apos;alasss&apos;);
if(sourceMap.get(&apos;method&apos;)==&apos;GET&apos;){
	
	var query = &apos;SELECT p.his_order_id, p.order_date_time, p.order_description, &apos;;
	query += &apos;p.order_category, p.relationship, p.order_by, p.order_location, p.priority, p.status, &apos;;
	query += &apos;p.order_option, p.attachment, p.audit_trail, &apos;;
	query += &apos;CASE &apos;;
	query += &apos;WHEN status=&quot;COMPLETED&quot; THEN (SELECT result_type FROM result_exam WHERE his_order_id=p.his_order_id LIMIT 1) &apos;;
	query += &apos;END as media, &apos;;
	query += &apos;CASE &apos;;
	query += &apos;WHEN status=&quot;COMPLETED&quot; THEN (SELECT result_data FROM result_exam WHERE his_order_id=p.his_order_id LIMIT 1) &apos;;
	query += &apos;END as report, p.patient_id &apos;;
	query += &apos;FROM his_patient_coe p &apos;;
	var queryParameters = [];

	if($(&apos;functParameterTest&apos;)(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;patient_id&apos;))){
		query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
		query += &apos;p.patient_id = ? &apos;;
		queryParameters.push(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;patient_id&apos;));
	}

	query += &apos;ORDER BY p.order_date_time DESC &apos;;
	var result = $(&apos;functExecuteQuery&apos;)(query,queryParameters);

	var countResult = result.size();
	var count = 1;
	var patient_coe = &apos;&apos;;
	while (result.next()){
		patient_coe += &apos;{&apos;;
		patient_coe += &apos;&quot;his_order_id&quot;:&quot;&apos;+result.getString(1)+&apos;&quot;,&apos;;
		patient_coe += &apos;&quot;order_date_time&quot;:&quot;&apos;+result.getString(2)+&apos;&quot;, &apos;;
		patient_coe += &apos;&quot;order_description&quot;:&quot;&apos;+result.getString(3)+&apos;&quot;,&apos;
		patient_coe += &apos;&quot;order_category&quot;:&quot;&apos;+result.getString(4)+&apos;&quot;, &apos;;
		patient_coe += &apos;&quot;relationship&quot;:&quot;&apos;+result.getString(5)+&apos;&quot;, &apos;;
		patient_coe += &apos;&quot;order_by&quot;:&quot;&apos;+result.getString(6)+&apos;&quot;, &apos;;
		patient_coe += &apos;&quot;order_location&quot;:&quot;&apos;+result.getString(7)+&apos;&quot;, &apos;;
		patient_coe += &apos;&quot;priority&quot;:&quot;&apos;+result.getString(8)+&apos;&quot;, &apos;;
		patient_coe += &apos;&quot;status&quot;:&quot;&apos;+result.getString(9)+&apos;&quot;, &apos;;
		patient_coe += &apos;&quot;option&quot;:&quot;&apos;+result.getString(10)+&apos;&quot;, &apos;;
		patient_coe += &apos;&quot;attachment&quot;:&quot;&apos;+result.getString(11)+&apos;&quot;, &apos;;
		patient_coe += &apos;&quot;audit_trail&quot;:&quot;&apos;+result.getString(12)+&apos;&quot;, &apos;;
		patient_coe += &apos;&quot;report_type&quot;:&quot;&apos;+result.getString(13)+&apos;&quot;, &apos;;
		patient_coe += &apos;&quot;report_data&quot;:&apos;+result.getString(14)+&apos;, &apos;;
		patient_coe += &apos;&quot;patient_id&quot;:&apos;+result.getString(15)+&apos; &apos;;
		patient_coe += &apos;}&apos;;
		if(count&lt;countResult){
			patient_coe += &apos;, &apos;;
		}
		count++;
		};

	var responseData;
	var meta = &apos;{&quot;lastUpdated&quot;:&quot;&apos;+ new Date().toISOString()+&apos;&quot;}&apos;;
		responseData = &apos;{&quot;resourceType&quot;:&quot;bundle&quot;,&apos;;
		responseData += &apos;&quot;meta&quot;:&apos; + meta + &apos;, &apos;;
		responseData += &apos;&quot;type&quot;:&quot;searchset&quot;, &apos;;
		responseData += &apos;&quot;total&quot;:&quot;&apos; + countResult + &apos;&quot;, &apos;;
		responseData += &apos;&quot;link&quot;:&quot;&quot;, &apos;;
		responseData += &apos;&quot;entry&quot;: [&apos;+ patient_coe +&apos;]&apos;;
		responseData += &apos;}&apos;;
		$(&apos;functFinalResponse&apos;)(responseData);
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>16</metaDataId>
          <name>POST Patient Order</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;POST&apos;){
	if(connectorMessage.getRawData() != &apos;&apos;){
		var msg = JSON.parse(connectorMessage.getRawData());
		var patient_id = msg.patient_id;
		var his_order_id = msg.his_order_id;
		var order_date_time = msg.order_date_time;
		var order_description = msg.order_description;
		var order_category = msg.order_category;
		var relationship = msg.relationship;
		var order_by = msg.order_by;
		var order_location = msg.order_location;
		var priority = msg.priority;
		var status = msg.status;
		var option = msg.option;
		var attachment = msg.attachment;
		var audit_trail = msg.audit_trail;
		
		var query = &quot;INSERT INTO his_patient_coe (patient_id, his_order_id, order_date_time, order_description, order_category, &quot;;
		query += &quot;relationship, order_by, order_location, priority, status, order_option, attachment, audit_trail) &quot;;
		query += &quot;VALUE (?,?,?,?,?,?,?,?,?,?,?,?,?)&quot;;
		var queryParameters = [patient_id, his_order_id, order_date_time, order_description, order_category, relationship, order_by, order_location, priority, status, option, attachment, audit_trail];
		$(&apos;functExecuteInsertQuery&apos;)(query,queryParameters);
	}
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>17</metaDataId>
          <name>PUT Update status for Spiro &amp; Fundus</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>//var query = &quot;UPDATE his_patient_coe SET status=&apos;IN PROGRESS&apos; WHERE his_order_id IN ()&quot;;
//var queryParameters = [];
//
//$(&apos;functExecuteInsertQuery&apos;)(query,queryParameters);</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>18</metaDataId>
          <name>POST Add to list</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;POST&apos;){
	if(connectorMessage.getRawData() != &apos;&apos;){
		var msg = JSON.parse(connectorMessage.getRawData());
		var patient_id = msg.patient_id;
		var order_name = msg.order_name;
		var instruction_description = msg.instruction_description;
		var quantity = msg.quantity;
		var frequency = msg.frequency;
		var date_start = msg.date_start;
		var urgency = msg.urgency;
		var recurring = msg.recurring;
		var no_of_time_hourly = (msg.no_of_time_hourly==&apos;&apos;) ? 0 : msg.no_of_time_hourly ;
		var duration = (msg.duration == &apos;&apos;) ? 0 : msg.duration;
		var ordered_by = msg.ordered_by;
		var status = msg.status;
		
		var query = &quot;INSERT INTO his_addtolist (patient_id, order_name, instruction_description, quantity, frequency, date_start, &quot;;
		query += &quot;urgency, recurring, no_of_time_hourly, duration, ordered_by, status) &quot;;
		query += &quot;VALUE (?,?,?,?,?,?,?,?,?,?,?,?)&quot;;
		var queryParameters = [patient_id, order_name, instruction_description, quantity, frequency, date_start, urgency, recurring, no_of_time_hourly, duration, ordered_by, status];
		$(&apos;functExecuteInsertQuery&apos;)(query,queryParameters);
	}
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>19</metaDataId>
          <name>POST Add Selected Image</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;POST&apos;){
	if(connectorMessage.getRawData() != &apos;&apos;){
		logger.info(connectorMessage.getRawData());
		var msg = JSON.parse(connectorMessage.getRawData());
		var patient_id = msg.patient_id;
		var his_order_id = msg.his_order_id;
		var images = JSON.stringify({url:msg.images});
		
		var query = &quot;INSERT INTO his_selected_image (patient_id, his_order_id, images) &quot;;
		query += &quot;VALUE (?,?,?)&quot;;
		var queryParameters = [patient_id, his_order_id, images];
		$(&apos;functExecuteInsertQuery&apos;)(query,queryParameters);

		var queryAttachment = &quot;UPDATE his_patient_coe SET attachment = 1 WHERE his_order_id=? AND patient_id=? &quot;;
		query += &quot;VALUE (?,?)&quot;;
		var queryParametersAttachment = [his_order_id, patient_id];
		$(&apos;functExecuteInsertQuery&apos;)(queryAttachment,queryParametersAttachment);
	}
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>20</metaDataId>
          <name>GET Selected Images</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;GET&apos;){
		
		var query = &quot;SELECT images FROM his_selected_image &quot;;
		var queryParameters = [];

		if($(&apos;functParameterTest&apos;)(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;patient_id&apos;))){
			query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
			query += &apos;patient_id = ? &apos;;
			queryParameters.push(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;patient_id&apos;));
		}

		if($(&apos;functParameterTest&apos;)(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;his_order_id&apos;))){
			query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
			query += &apos;his_order_id = ? &apos;;
			queryParameters.push(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;his_order_id&apos;));
		}
	
		var result = $(&apos;functExecuteQuery&apos;)(query,queryParameters);

		var countResult = result.size();
		var count = 1;
		var images = [];
		while(result.next()){
			images.push(result.getString(1));	
		}

		var responseData;
		var meta = &apos;{&quot;lastUpdated&quot;:&quot;&apos;+ new Date().toISOString()+&apos;&quot;}&apos;;
		responseData = &apos;{&quot;resourceType&quot;:&quot;bundle&quot;,&apos;;
		responseData += &apos;&quot;meta&quot;:&apos; + meta + &apos;, &apos;;
		responseData += &apos;&quot;type&quot;:&quot;searchset&quot;, &apos;;
		responseData += &apos;&quot;total&quot;:&quot;&apos; + countResult + &apos;&quot;, &apos;;
		responseData += &apos;&quot;link&quot;:&quot;&quot;, &apos;;
		responseData += &apos;&quot;entry&quot;: &apos;+ images ;
		responseData += &apos;}&apos;;
		$(&apos;functFinalResponse&apos;)(responseData);

}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>21</metaDataId>
          <name>GET Patients</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if(sourceMap.get(&apos;method&apos;)==&apos;GET&apos;){
	var query = &apos;SELECT p.patient_name, p.identification_no, &apos;;
	query += &apos;DATE_FORMAT(p.date_of_birth,&quot;%d %b %Y&quot;) AS date_of_birth, p.patient_mrn, &apos;;
	query += &apos;CASE &apos;;
	query += &apos;WHEN p.gender = &quot;M&quot; THEN &quot;MALE&quot; &apos;;
	query += &apos;WHEN p.gender = &quot;F&quot; THEN &quot;FEMALE&quot; &apos;;
	query += &apos;WHEN p.gender = &quot;O&quot; THEN &quot;OTHER&quot; &apos;;
	query += &apos;END AS gender, p.date_of_birth as clean_dob, p.gender as clean_gender, p.id as patient_id &apos;
	query += &apos;FROM his_patient p&apos;;
	var queryParameters = [];

	if($(&apos;functParameterTest&apos;)(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;patient_id&apos;))){
		query += (queryParameters.length==0) ? &apos; WHERE &apos; : &apos; AND &apos;;
		query += &apos;p.id = ? &apos;;
		queryParameters.push(sourceMap.get(&apos;parameters&apos;).getParameter(&apos;patient_id&apos;));
	}
	var result = $(&apos;functExecuteQuery&apos;)(query,queryParameters);

	var countResult = result.size();
	var count = 1;
	var patient = &apos;&apos;;
	while (result.next()){
		patient += &apos;{&apos;;
		patient += &apos;&quot;patient_name&quot;:&quot;&apos;+result.getString(1)+&apos;&quot;,&apos;;
		patient += &apos;&quot;identification_no&quot;:&quot;&apos;+result.getString(2)+&apos;&quot;, &apos;;
		patient += &apos;&quot;date_of_birth&quot;:&quot;&apos;+result.getString(3)+&apos;&quot;,&apos;
		patient += &apos;&quot;patient_mrn&quot;:&quot;&apos;+result.getString(4)+&apos;&quot;, &apos;;
		patient += &apos;&quot;gender&quot;:&quot;&apos;+result.getString(5)+&apos;&quot;, &apos;;
		patient += &apos;&quot;clean_dob&quot;:&quot;&apos;+result.getString(6)+&apos;&quot;, &apos;;
		patient += &apos;&quot;clean_gender&quot;:&quot;&apos;+result.getString(7)+&apos;&quot;, &apos;;
		patient += &apos;&quot;patient_id&quot;:&quot;&apos;+result.getString(8)+&apos;&quot; &apos;;
		patient += &apos;}&apos;;
		if(count&lt;countResult){
			addtolist += &apos;, &apos;;
		}
		count++;
		};

	var responseData;
	var meta = &apos;{&quot;lastUpdated&quot;:&quot;&apos;+ new Date().toISOString()+&apos;&quot;}&apos;;
		responseData = &apos;{&quot;resourceType&quot;:&quot;bundle&quot;,&apos;;
		responseData += &apos;&quot;meta&quot;:&apos; + meta + &apos;, &apos;;
		responseData += &apos;&quot;type&quot;:&quot;searchset&quot;, &apos;;
		responseData += &apos;&quot;total&quot;:&quot;&apos; + countResult + &apos;&quot;, &apos;;
		responseData += &apos;&quot;link&quot;:&quot;&quot;, &apos;;
		responseData += &apos;&quot;entry&quot;: &apos;+ patient +&apos;&apos;;
		responseData += &apos;}&apos;;
		$(&apos;functFinalResponse&apos;)(responseData);
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
var getResponseContent = channelMap.get(&apos;responseContent&apos;);
if(getResponseContent!=null){
	return channelMap.get(&apos;responseContent&apos;).toString();	
}
</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.1">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.1">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>true</enabled>
          <lastModified>
            <time>1524300647763</time>
            <timezone>Asia/Kuala_Lumpur</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
      </exportData>
    </channel>
    <channel version="3.5.1">
      <id>3c567d42-3cac-4f9d-bf24-fb12744a5bb9</id>
      <nextMetaDataId>2</nextMetaDataId>
      <name>Endo Sim</name>
      <description></description>
      <revision>22</revision>
      <sourceConnector version="3.5.1">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.5.1">
          <pluginProperties>
            <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="3.5.1">
  <authType>NONE</authType>
            </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
          </pluginProperties>
          <listenerConnectorProperties version="3.5.1">
            <host>0.0.0.0</host>
            <port>5000</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.5.1">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <xmlBody>false</xmlBody>
          <parseMultipart>true</parseMultipart>
          <includeMetadata>false</includeMetadata>
          <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
          <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
          <responseContentType>text/plain</responseContentType>
          <responseDataTypeBinary>false</responseDataTypeBinary>
          <responseStatusCode></responseStatusCode>
          <responseHeaders class="linked-hash-map"/>
          <charset>UTF-8</charset>
          <contextPath>order</contextPath>
          <timeout>0</timeout>
          <staticResources/>
        </properties>
        <transformer version="3.5.1">
          <elements>
            <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
              <name>mapper</name>
              <sequenceNumber>0</sequenceNumber>
              <script>var contextPath = sourceMap.get(&apos;contextPath&apos;).toString();
var prefixService = &quot;/order&quot;;
var params = contextPath.substring(prefixService.length).split(&apos;/&apos;);
var his_order_id = String(params[1]);
channelMap.put(&apos;his_order_id&apos;,his_order_id);

logger.info(channelMap.get(&apos;his_order_id&apos;));
logger.info(&apos;sampai ke channel endo sim&apos;);

if(sourceMap.get(&apos;method&apos;)==&apos;PUT&apos;){
	logger.info(connectorMessage.getRawData());
	if(connectorMessage.getRawData() != &apos;&apos;){
		var msg = JSON.parse(connectorMessage.getRawData());
		
		var his_order_id = msg.his_order_id;
		var order_status = &apos;COMPLETED&apos;;
//		
		var queryOrder = &quot;UPDATE orders SET order_status = ? WHERE his_order_id = ? &quot;
		var queryOrderParameters = [order_status, his_order_id];
		$(&apos;functExecuteInsertQuery&apos;)(queryOrder,queryOrderParameters);
		logger.info(&apos;execute update&apos;);
	}
}</script>
            </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          </elements>
          <inboundTemplate encoding="base64"></inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>RAW</inboundDataType>
          <outboundDataType>RAW</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
            <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
            <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.5.1">
          <elements/>
        </filter>
        <transportName>HTTP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.1">
          <metaDataId>1</metaDataId>
          <name>EndProcess</name>
          <properties class="com.mirth.connect.connectors.vm.VmDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <channelId>none</channelId>
            <channelTemplate>${message.encodedData}</channelTemplate>
            <mapVariables/>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>RAW</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>Channel Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.1">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.1">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>true</enabled>
          <lastModified>
            <time>1524311913958</time>
            <timezone>Asia/Kuala_Lumpur</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
      </exportData>
    </channel>
  </channels>
</channelGroup>